(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    132889,       2904]
NotebookOptionsPosition[    128079,       2781]
NotebookOutlinePosition[    128459,       2797]
CellTagsIndexPosition[    128416,       2794]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Computation Automation", "Title",
 CellChangeTimes->{{3.752873345220866*^9, 
  3.752873376004627*^9}},ExpressionUUID->"c07b878b-c9a4-4aaa-b9c4-\
ca5feef56d55"],

Cell[CellGroupData[{

Cell["Documentation for select functions", "Chapter",
 CellChangeTimes->{{3.7528730271566744`*^9, 3.752873030940891*^9}, {
  3.75288565491094*^9, 3.7528856639984603`*^9}, {3.782730896740304*^9, 
  3.7827308994769716`*^9}},ExpressionUUID->"1092ece5-fea6-4c48-b3a5-\
ae0a0ac893d5"],

Cell[CellGroupData[{

Cell["OpenBabel", "Section",
 CellChangeTimes->{{3.752885704257763*^9, 
  3.7528857210697246`*^9}},ExpressionUUID->"12a4d768-90ce-4404-8658-\
06a6587f0416"],

Cell[TextData[{
 StyleBox["obabel",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["[input]\n\n",
  FontWeight->"Bold"],
 "input_type: \[OpenCurlyDoubleQuote]smiles\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]smiles -f\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]chemdraw\[CloseCurlyDoubleQuote]\ninput: \
\[OpenCurlyDoubleQuote]smiles\[CloseCurlyDoubleQuote] -- string, \
\[OpenCurlyDoubleQuote]smiles -f\[CloseCurlyDoubleQuote] -- smiles text file, \
\[OpenCurlyDoubleQuote]chemdraw\[CloseCurlyDoubleQuote] -- ChemDraw file",
 StyleBox["\n\n",
  FontWeight->"Bold"],
 StyleBox["Output:",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0.5]],
 StyleBox[" ",
  FontWeight->"Bold"],
 "3D coordinate text.",
 StyleBox["\n\n",
  FontWeight->"Bold"],
 StyleBox["Presets:",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0.5]],
 "\nchargeOB = 0\nmultiplicityOB = 1\n\
inputType=\[CloseCurlyDoubleQuote]chemdraw\[CloseCurlyDoubleQuote]\n\t\n",
 StyleBox["OpenBabelPresets",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 " resets back to preset values."
}], "Text",
 CellChangeTimes->{{3.7528682247379913`*^9, 3.752868257740879*^9}, {
   3.752868297116132*^9, 3.7528683577325983`*^9}, {3.7528684710050774`*^9, 
   3.75286847331621*^9}, 3.752868987476618*^9, {3.7528691937544165`*^9, 
   3.752869195821534*^9}, {3.7528707888996534`*^9, 3.752870877545724*^9}, {
   3.7528709776404486`*^9, 3.7528709862769427`*^9}, {3.752871046742401*^9, 
   3.7528710729168983`*^9}, {3.7528730473728304`*^9, 3.75287307078117*^9}, {
   3.7528829585557175`*^9, 3.752882959863793*^9}, {3.75288303814727*^9, 
   3.7528831294634933`*^9}, 3.7528831766821938`*^9, {3.760126010096241*^9, 
   3.7601260408412867`*^9}},ExpressionUUID->"0335a3b2-a680-4d52-a1e0-\
5e1429677816"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Generate", " ", "coordinate", " ", "text", " ", "from", " ", "smiles", 
    " ", "input"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"obabel", "[", 
    RowBox[{"\"\<smiles\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<C\>\"", ",", "\"\<CC\>\""}], "}"}]}], "]"}], "//", 
   "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.75251847550438*^9, 3.752518477210478*^9}, {
   3.752518592171053*^9, 3.752518626628024*^9}, {3.7525193050998306`*^9, 
   3.752519308018997*^9}, {3.752519369364506*^9, 3.7525193700505457`*^9}, {
   3.7525199780023184`*^9, 3.752519993297193*^9}, {3.7525201608327756`*^9, 
   3.7525201644569826`*^9}, {3.7525202090985365`*^9, 
   3.7525202122007136`*^9}, {3.752520333321641*^9, 3.7525203375598836`*^9}, {
   3.752522112354613*^9, 3.7525221162926207`*^9}, {3.7526869452793255`*^9, 
   3.752686959656355*^9}, {3.752687022681493*^9, 3.7526870339325128`*^9}, 
   3.75268726929599*^9, {3.752861886480464*^9, 3.7528618900546684`*^9}, {
   3.7528620342939186`*^9, 3.752862037710114*^9}, {3.7528633643569937`*^9, 
   3.75286342932471*^9}, {3.7528680967276697`*^9, 3.7528681645025463`*^9}, 
   3.752868220378742*^9, {3.752868266157361*^9, 3.7528682733737736`*^9}, {
   3.752883195201253*^9, 3.7528832052958307`*^9}, {3.752883272873696*^9, 
   3.752883286689486*^9}, {3.752883874462105*^9, 3.752883901919675*^9}, {
   3.760125039140666*^9, 3.7601250652977057`*^9}, {3.7601252084819174`*^9, 
   3.7601252218409395`*^9}, {3.760125479911322*^9, 3.760125489293336*^9}, {
   3.7601256132965207`*^9, 3.7601256754427385`*^9}, {3.760125707314786*^9, 
   3.760125749264847*^9}, {3.760125791595912*^9, 3.760125820090955*^9}, {
   3.7601258627950172`*^9, 3.760125864215019*^9}, {3.7601259306951203`*^9, 
   3.7601259527121534`*^9}, {3.760125989210209*^9, 3.7601259893602095`*^9}, {
   3.7739982017694206`*^9, 
   3.7739982076379447`*^9}},ExpressionUUID->"c71b780e-c5cf-4e27-934b-\
20f9df6b39d1"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"%chk=blank.chk\\n# hf/3-21g\\n\\nTitle Card Required\\n\\n0  1\\nC \
          0.96547         0.00797        -0.09351\\nH           2.05767       \
  0.00796        -0.09351\\nH           0.60141         0.09536        \
-1.11953\\nH           0.60141         0.85283         0.49518\\nH           \
0.60141        -0.92429         0.34381\\n\"\>"},
     {"\<\"%chk=blank.chk\\n# hf/3-21g\\n\\nTitle Card Required\\n\\n0  1\\nC \
          0.96944         0.00797        -0.09351\\nC           2.48150       \
  0.00797        -0.09351\\nH           0.58507         0.09490        \
-1.11416\\nH           0.58507         0.84840         0.49210\\nH           \
0.58507        -0.91941         0.34152\\nH           2.86587         0.93534 \
       -0.52855\\nH           2.86588        -0.83247        -0.67913\\nH     \
      2.86587        -0.07897         0.92713\\n\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7566453073750257`*^9, {3.760124972424564*^9, 3.7601249810825777`*^9}, {
   3.760125027299648*^9, 3.7601250659607067`*^9}, 3.7601251411358194`*^9, {
   3.760125199172904*^9, 3.7601252250919447`*^9}, {3.760125490823338*^9, 
   3.7601255035973577`*^9}, {3.7601255393584127`*^9, 
   3.7601255575974393`*^9}, {3.760125602544505*^9, 3.7601256318486743`*^9}, {
   3.760125664104722*^9, 3.760125749654847*^9}, {3.7601258015629263`*^9, 
   3.7601258211369576`*^9}, 3.76012586470502*^9, {3.760125904493081*^9, 
   3.7601259900802107`*^9}, 3.7739981535326614`*^9, 
   3.773998212548292*^9},ExpressionUUID->"66c43d69-1ce7-4590-800f-\
b0ce98a4b6df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Generate", " ", "coordinate", " ", "text", " ", "from", " ", "ChemDraw", 
    " ", "input"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"cdx", "=", 
     RowBox[{
      RowBox[{"Directory", "[", "]"}], "<>", 
      "\"\<\\\\data\\\\0_computation_data\\\\0_chemdraw_input\\\\chemdraw_\
test_.cdx\>\""}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"obabel", "[", 
     RowBox[{"\"\<chemdraw\>\"", ",", "cdx"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.75251847550438*^9, 3.752518477210478*^9}, {
   3.752518592171053*^9, 3.752518626628024*^9}, {3.7525193050998306`*^9, 
   3.752519308018997*^9}, {3.752519369364506*^9, 3.7525193700505457`*^9}, {
   3.7525199780023184`*^9, 3.752519993297193*^9}, {3.7525201608327756`*^9, 
   3.7525201644569826`*^9}, {3.7525202090985365`*^9, 
   3.7525202122007136`*^9}, {3.752520333321641*^9, 3.7525203375598836`*^9}, {
   3.752522112354613*^9, 3.7525221162926207`*^9}, {3.7526869452793255`*^9, 
   3.752686959656355*^9}, {3.752687022681493*^9, 3.7526870339325128`*^9}, 
   3.75268726929599*^9, {3.752861886480464*^9, 3.7528618900546684`*^9}, {
   3.7528620342939186`*^9, 3.752862037710114*^9}, {3.7528633643569937`*^9, 
   3.75286342932471*^9}, {3.7528680967276697`*^9, 3.7528681645025463`*^9}, 
   3.752868220378742*^9, {3.752868266157361*^9, 3.7528682733737736`*^9}, {
   3.752883195201253*^9, 3.7528832052958307`*^9}, {3.752883272873696*^9, 
   3.752883286689486*^9}, {3.752883874462105*^9, 3.752883901919675*^9}, {
   3.752883939905848*^9, 3.7528840090488024`*^9}, {3.752884047851022*^9, 
   3.7528840539043684`*^9}},ExpressionUUID->"89838916-63e8-4949-8197-\
36659986f2d5"],

Cell[BoxData["\<\"%chk=blank.chk\\n# hf/3-21g\\n\\nTitle Card Required\\n\\n0 \
 1\\nN2         -0.70702        -1.22115        -0.04117\\nC          \
-1.38225        -0.03744        -0.06844\\nN          -2.80854        \
-0.07380        -0.12301\\nN1         -3.57159         1.05693        \
-0.15468\\nC          -4.82691         0.60730        -0.20787\\nC          \
-4.90297        -0.79371        -0.21073\\nC          -3.59488        \
-1.20824        -0.15486\\nC          -0.73751         1.19837        \
-0.04962\\nC           0.65436         1.22404        -0.00509\\nC           \
1.35923         0.02644         0.02114\\nC           0.64184        -1.15811 \
        0.00324\\nH          -5.63759         1.32425        -0.24288\\nH     \
     -5.78503        -1.41650        -0.24871\\nH          -3.14422        \
-2.19072        -0.13669\\nH          -1.29629         2.12952        \
-0.07093\\nH           1.18215         2.17364         0.00783\\nH           \
2.44301         0.01662         0.05464\\nH           1.15005        -2.11820 \
        0.02422\\n\"\>"], "Output",
 CellChangeTimes->{
  3.7528840221645527`*^9, 3.7528840590136604`*^9, 3.75288418855607*^9, 
   3.752884274281973*^9, 3.7528844520661416`*^9, 3.7528845113505325`*^9, 
   3.752884696860143*^9, 3.752884812788774*^9, 3.7528848499669003`*^9, 
   3.752884924987191*^9, 3.752884964766466*^9, {3.756645321489687*^9, 
   3.756645350348431*^9}, 
   3.773998229323619*^9},ExpressionUUID->"1dbeffa2-982a-41ec-8a53-\
8a8c55fbbe35"]
}, Open  ]],

Cell[TextData[{
 StyleBox["OpenBabel",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["[file_name, file_type]\n\n",
  FontWeight->"Bold"],
 "file_name: files located in chemdraw_input directory\nfile_type: \
\[OpenCurlyDoubleQuote]chemdraw\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]smiles\[CloseCurlyDoubleQuote]",
 StyleBox["\n\n",
  FontWeight->"Bold"],
 StyleBox["Output:",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0.5]],
 StyleBox[" ",
  FontWeight->"Bold"],
 "3D coordinate files which retain atom labels from ChemDraw.",
 StyleBox["\n\n",
  FontWeight->"Bold"],
 StyleBox["Presets:",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0.5]],
 "\nchargeOB = 0\nmultiplicityOB = 1\n\t\n",
 StyleBox["OpenBabelPresets",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 " resets back to preset values."
}], "Text",
 CellChangeTimes->{{3.7528682247379913`*^9, 3.752868257740879*^9}, {
   3.752868297116132*^9, 3.7528683577325983`*^9}, {3.7528684710050774`*^9, 
   3.75286847331621*^9}, 3.752868987476618*^9, {3.7528691937544165`*^9, 
   3.752869195821534*^9}, {3.7528707888996534`*^9, 3.752870877545724*^9}, {
   3.7528709776404486`*^9, 3.7528709862769427`*^9}, {3.752871046742401*^9, 
   3.7528710729168983`*^9}, {3.7528730473728304`*^9, 
   3.75287307078117*^9}},ExpressionUUID->"90073951-cd8b-4c07-b2f9-\
24468a03126b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Generate", " ", "a", " ", "batch", " ", "of", " ", "coordinate", " ", 
    "files", " ", "from", " ", "ChemDraw"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"OpenBabel", "[", 
   RowBox[{"\"\<chemdraw_test_\>\"", ",", "\"\<chemdraw\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.75251847550438*^9, 3.752518477210478*^9}, {
   3.752518592171053*^9, 3.752518626628024*^9}, {3.7525193050998306`*^9, 
   3.752519308018997*^9}, {3.752519369364506*^9, 3.7525193700505457`*^9}, {
   3.7525199780023184`*^9, 3.752519993297193*^9}, {3.7525201608327756`*^9, 
   3.7525201644569826`*^9}, {3.7525202090985365`*^9, 
   3.7525202122007136`*^9}, {3.752520333321641*^9, 3.7525203375598836`*^9}, {
   3.752522112354613*^9, 3.7525221162926207`*^9}, {3.7526869452793255`*^9, 
   3.752686959656355*^9}, {3.752687022681493*^9, 3.7526870339325128`*^9}, 
   3.75268726929599*^9, {3.752861886480464*^9, 3.7528618900546684`*^9}, {
   3.7528620342939186`*^9, 3.752862037710114*^9}, {3.7528633643569937`*^9, 
   3.75286342932471*^9}, {3.7528680967276697`*^9, 3.7528681645025463`*^9}, 
   3.752868220378742*^9, {3.752868266157361*^9, 
   3.7528682733737736`*^9}},ExpressionUUID->"fdf684e5-5824-4460-83a9-\
7158959fcccd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Generate", " ", "a", " ", "batch", " ", "of", " ", "coordinate", " ", 
    "files", " ", "from", " ", "smiles"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"OpenBabel", "[", 
   RowBox[{"\"\<smiles_test_\>\"", ",", "\"\<smiles\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7526870387765217`*^9, 3.7526870671895733`*^9}, 
   3.7526873108430796`*^9, {3.752861929111902*^9, 3.7528619319500647`*^9}, {
   3.752863391638554*^9, 3.7528634283236523`*^9}, {3.7528681711979294`*^9, 
   3.7528681729130273`*^9}, {3.752868276092929*^9, 
   3.7528682773029985`*^9}},ExpressionUUID->"8589e928-48b5-4f56-8a2c-\
b0168821e7db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Generate", " ", "a", " ", "batch", " ", "of", " ", "coordinate", " ", 
    "files", " ", "from", " ", "smiles"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"OpenBabel", "[", 
   RowBox[{"\"\<heterocycle_\>\"", ",", "\"\<chemdraw\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7526870387765217`*^9, 3.7526870671895733`*^9}, 
   3.7526873108430796`*^9, {3.752861929111902*^9, 3.7528619319500647`*^9}, {
   3.752863391638554*^9, 3.7528634283236523`*^9}, {3.7528681711979294`*^9, 
   3.7528681729130273`*^9}, {3.752868276092929*^9, 3.7528682773029985`*^9}, {
   3.7600354785022154`*^9, 3.760035488363779*^9}, {3.760035527152998*^9, 
   3.760035530669199*^9}, {3.7627891349067993`*^9, 
   3.762789137656805*^9}},ExpressionUUID->"78ebb358-b799-4c38-8732-\
ad2bf8819b38"]
}, Open  ]],

Cell[CellGroupData[{

Cell["GenerateGuassianInputText", "Section",
 CellChangeTimes->{{3.752885704257763*^9, 
  3.752885746475178*^9}},ExpressionUUID->"f26a95e2-a887-429e-96a0-\
f89aab708bf2"],

Cell[TextData[{
 StyleBox["GenerateGaussianInputText",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["[file_path, processors, memory]\n\n",
  FontWeight->"Bold"],
 "file_path: path to coordinate_file\nprocessors: processors per job\nmemory: \
memory per job\n\t",
 StyleBox["\n\n",
  FontWeight->"Bold"],
 StyleBox["Output:",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0.5]],
 StyleBox[" ",
  FontWeight->"Bold"],
 "text for gaussian input (.com/.gjf format)",
 StyleBox["\n\n",
  FontWeight->"Bold"],
 StyleBox["Presets:",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0.5]],
 StyleBox["\n",
  FontWeight->"Bold"],
 "atomsPerProcessor = 6\nmaxProcessors = 20\nramPerProcessor = 2\ntheory = {\
\[OpenCurlyDoubleQuote]B3LYP\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]\
6-31G*\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]LANL2DZ\
\[CloseCurlyDoubleQuote]}\nmaxAtomicNumberSupported = 36\nchargeCT = \
\[CloseCurlyDoubleQuote]Automatic\[CloseCurlyDoubleQuote]\nmultiplicityCT = \
\[CloseCurlyDoubleQuote]Automatic\[CloseCurlyDoubleQuote]\n\t\n",
 StyleBox["ComputationalTheoryPresets",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 " resets back to preset values.\n\n",
 StyleBox["New documentation required:",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 " need to add documentation for other job types: single part calculations, \
transition state calculations etc."
}], "Text",
 CellChangeTimes->{{3.7528682247379913`*^9, 3.752868257740879*^9}, {
  3.752868364769001*^9, 3.752868382197998*^9}, {3.752868463676658*^9, 
  3.7528684951964607`*^9}, {3.752868714200987*^9, 3.752868715927086*^9}, {
  3.7528689627012005`*^9, 3.7528689750679083`*^9}, {3.752870894230678*^9, 
  3.752870960822487*^9}, {3.7528709929333234`*^9, 3.7528709986806517`*^9}, {
  3.7528710810183616`*^9, 3.752871157271723*^9}, {3.7528732422959795`*^9, 
  3.7528732457831793`*^9}, {3.7528735166476717`*^9, 3.7528735796392746`*^9}, {
  3.7528737436666565`*^9, 3.7528737744064145`*^9}, {3.75292388841625*^9, 
  3.7529239791664753`*^9}, {3.752924027935596*^9, 3.752924077118718*^9}, {
  3.7529242134500775`*^9, 3.752924215861083*^9}, {3.7566454361421947`*^9, 
  3.7566454925047045`*^9}},ExpressionUUID->"c9115722-75a6-4ae8-816e-\
61df314538bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"generate", " ", ".", "com"}], "/.", 
    RowBox[{
    "gjf", " ", "text", " ", "from", " ", "input", " ", "drawn", " ", "in", 
     " ", "gauss", " ", "view"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"GenerateGaussianInputText", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Directory", "[", "]"}], "<>", 
     "\"\<\\\\data\\\\0_computation_data\\\\0_coordinate_input\\\\gauss_view_\
test_\\\\test2_.gjf\>\""}], ",", "\[IndentingNewLine]", "\"\<Automatic\>\"", 
    ",", "\[IndentingNewLine]", "\"\<Automatic\>\""}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.752923461421055*^9, 3.752923515513239*^9}, 
   3.7529238561601677`*^9, {3.7529241638479447`*^9, 
   3.7529242030300455`*^9}},ExpressionUUID->"1cf1259c-28b1-4497-8df1-\
156620190950"],

Cell[BoxData["\<\"%nprocshared=7\\n%Mem=14GB\\n%Chk=test2_1.chk\\n# \
opt=CalcFc B3LYP/genecp scf=xqc\\n\\nTitle Card Required\\n\\n0 1\\nPd        \
      -1.51467506     0.62893081      0.00000000      \\nC               \
0.53532494      0.62893081      0.00000000      \\nC               1.23284638 \
     0.63148094      -1.20827512     \\nC               1.23283055      \
0.62649265      1.20790236      \\nC               2.62755830      0.63091083 \
     -1.20855411     \\nH               0.68265334      0.63262553      \
-2.16039280     \\nC               2.62796843      0.62691796      1.20779862 \
     \\nH               0.68323327      0.62466247      2.16030380      \\nC  \
             3.32538974      0.62898836      -0.00014850     \\nH             \
  3.17742117      0.63228675      -2.16089095     \\nH               \
3.17765343      0.62541060      2.16033122      \\nH               4.42506968 \
     0.62859844      -0.00061833     \\nI               -4.12467506     \
0.62893081      0.00000000      \\nP               -1.51467506     \
-1.70106481     -0.00451801     \\nP               -1.51467506     2.95892643 \
     0.00451801      \\nC               0.20123729      3.56559221      \
0.00572848      \\nH               0.70563186      3.20720575      0.87868052 \
     \\nH               0.70564788      3.21064678      -0.86861910     \\nH  \
             0.20123729      4.63559013      0.00783568      \\nC             \
  -2.37266073     3.56270996      1.49169858      \\nH               \
-1.90574581     4.46334868      1.83190490      \\nH               \
-3.39792922     3.75918514      1.25691780      \\nH               \
-2.31872708     2.82056749      2.26060411      \\nC               \
-2.37260165     3.56847293      -1.48034394     \\nH               \
-3.40262812     3.74442016      -1.25015261     \\nH               \
-1.91869857     4.48142014      -1.80499668     \\nH               \
-2.30086345     2.83793808      -2.25885050     \\nC               \
-2.37266893     -2.31061124     1.48030510      \\nH               \
-3.39728969     -2.50873058     1.24408268      \\nH               \
-1.90407708     -3.21110366     1.81858765      \\nH               \
-2.32106477     -1.57035902     2.25119008      \\nC               0.20123729 \
     -2.30773074     -0.00565079     \\nH               0.70622489      \
-1.94778066     -0.87761608     \\nH               0.70505418      \
-1.95435453     0.86967417      \\nH               0.20123796      \
-3.37772317     -0.00967645     \\nC               -2.37259345     \
-2.30484826     -1.49173742     \\nH               -1.92828882     \
-3.22431548     -1.81122678     \\nH               -3.40583018     \
-2.46744887     -1.26616506     \\nH               -2.28804170     \
-1.57775185     -2.27217435     \\n\\nC H P 0\\n6-31G*\\n****\\nPd I \
0\\nLANL2DZ\\n****\\n\\nPd I \
0\\nLANL2DZ\\n\\n\\n\\n--Link1--\\n%nprocshared=7\\n%Mem=14GB\\n%Oldchk=test2_\
1.chk\\n%Chk=test2_2.chk\\n# freq B3LYP/genecp volume NMR pop=NPA \
density=current Geom=AllCheck Guess=Read\\n\\nC H P 0\\n6-31G*\\n****\\nPd I \
0\\nLANL2DZ\\n****\\n\\nPd I \
0\\nLANL2DZ\\n\\n\\n\\n--Link1--\\n%nprocshared=7\\n%Mem=14GB\\n%Oldchk=test2_\
2.chk\\n%Chk=test2_3.chk\\n# TD(NStates=10, Root=1) B3LYP/genecp volume \
pop=NPA density=current Geom=AllCheck Guess=Read\\n\\nC H P 0\\n6-31G*\\n****\
\\nPd I 0\\nLANL2DZ\\n****\\n\\nPd I 0\\nLANL2DZ\\n\\n\\n\\n\\n\\n\"\>"], \
"Output",
 CellChangeTimes->{
  3.7566454060146637`*^9},ExpressionUUID->"2dc23235-bb9d-4800-bd93-\
0a4460f7c5df"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GenerateGuassianInputTS", "Section",
 CellChangeTimes->{{3.752885704257763*^9, 3.752885746475178*^9}, 
   3.7535546744384236`*^9},ExpressionUUID->"069b9503-3bec-46e1-9568-\
82592ec7eca8"],

Cell[TextData[{
 StyleBox["GenerateGaussianInputTextTS",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["[file_path, processors, memory]\n\n",
  FontWeight->"Bold"],
 "file_path: path to coordinate_file\nprocessors: processors per job\nmemory: \
memory per job\n\t",
 StyleBox["\n\n",
  FontWeight->"Bold"],
 StyleBox["Output:",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0.5]],
 StyleBox[" ",
  FontWeight->"Bold"],
 "text for gaussian input (.com/.gjf format)",
 StyleBox["\n\n",
  FontWeight->"Bold"],
 StyleBox["Presets:",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0.5]],
 StyleBox["\n",
  FontWeight->"Bold"],
 "atomsPerProcessor = 6\nmaxProcessors = 20\nramPerProcessor = 2\ntheory = {\
\[OpenCurlyDoubleQuote]B3LYP\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]\
6-31G*\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]LANL2DZ\
\[CloseCurlyDoubleQuote]}\nmaxAtomicNumberSupported = 36\nchargeCT = \
\[CloseCurlyDoubleQuote]Automatic\[CloseCurlyDoubleQuote]\nmultiplicityCT = \
\[CloseCurlyDoubleQuote]Automatic\[CloseCurlyDoubleQuote]\n\njobTypeTS = \
\[OpenCurlyDoubleQuote]opt/freq\[CloseCurlyDoubleQuote]\n\tAlso accepts \
\[OpenCurlyDoubleQuote]stepwise\[CloseCurlyDoubleQuote]\n\t\n",
 StyleBox["ComputationalTheoryPresets",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 "  and ",
 StyleBox["GenerateGaussianInputTextTSPresets",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 " resets back to preset values."
}], "Text",
 CellChangeTimes->{{3.7528682247379913`*^9, 3.752868257740879*^9}, {
  3.752868364769001*^9, 3.752868382197998*^9}, {3.752868463676658*^9, 
  3.7528684951964607`*^9}, {3.752868714200987*^9, 3.752868715927086*^9}, {
  3.7528689627012005`*^9, 3.7528689750679083`*^9}, {3.752870894230678*^9, 
  3.752870960822487*^9}, {3.7528709929333234`*^9, 3.7528709986806517`*^9}, {
  3.7528710810183616`*^9, 3.752871157271723*^9}, {3.7528732422959795`*^9, 
  3.7528732457831793`*^9}, {3.7528735166476717`*^9, 3.7528735796392746`*^9}, {
  3.7528737436666565`*^9, 3.7528737744064145`*^9}, {3.75292388841625*^9, 
  3.7529239791664753`*^9}, {3.752924027935596*^9, 3.752924077118718*^9}, {
  3.7529242134500775`*^9, 3.752924215861083*^9}, {3.7535546799714375`*^9, 
  3.753554680111438*^9}, {3.7542440784810095`*^9, 
  3.7542441460911875`*^9}},ExpressionUUID->"39aba72a-95d7-44a6-a64e-\
c08010612f3c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"generate", " ", ".", "com"}], "/.", 
    RowBox[{
    "gjf", " ", "text", " ", "from", " ", "input", " ", "drawn", " ", "in", 
     " ", "gauss", " ", "view"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"GenerateGaussianInputTextTS", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Directory", "[", "]"}], "<>", 
     "\"\<\\\\data\\\\0_computation_data\\\\0_coordinate_input\\\\gauss_view_\
test_\\\\test2_.gjf\>\""}], ",", "\[IndentingNewLine]", "\"\<Automatic\>\"", 
    ",", "\[IndentingNewLine]", "\"\<Automatic\>\""}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.752923461421055*^9, 3.752923515513239*^9}, 
   3.7529238561601677`*^9, {3.7529241638479447`*^9, 3.7529242030300455`*^9}, {
   3.7535546892124662`*^9, 
   3.7535547016604958`*^9}},ExpressionUUID->"b622f71c-866a-484d-a2b6-\
7d96fe50bafa"],

Cell[BoxData["\<\"%nprocshared=7\\n%Mem=14GB\\n%Chk=test2_1.chk\\n# \
opt=(calcfc,ts,noeigentest) scf=xqc freq B3LYP/genecp\\n\\nTitle Card \
Required\\n\\n0 1\\nPd              -1.51467506     0.62893081      \
0.00000000      \\nC               0.53532494      0.62893081      0.00000000 \
     \\nC               1.23284638      0.63148094      -1.20827512     \\nC  \
             1.23283055      0.62649265      1.20790236      \\nC             \
  2.62755830      0.63091083      -1.20855411     \\nH               \
0.68265334      0.63262553      -2.16039280     \\nC               2.62796843 \
     0.62691796      1.20779862      \\nH               0.68323327      \
0.62466247      2.16030380      \\nC               3.32538974      0.62898836 \
     -0.00014850     \\nH               3.17742117      0.63228675      \
-2.16089095     \\nH               3.17765343      0.62541060      2.16033122 \
     \\nH               4.42506968      0.62859844      -0.00061833     \\nI  \
             -4.12467506     0.62893081      0.00000000      \\nP             \
  -1.51467506     -1.70106481     -0.00451801     \\nP               \
-1.51467506     2.95892643      0.00451801      \\nC               0.20123729 \
     3.56559221      0.00572848      \\nH               0.70563186      \
3.20720575      0.87868052      \\nH               0.70564788      3.21064678 \
     -0.86861910     \\nH               0.20123729      4.63559013      \
0.00783568      \\nC               -2.37266073     3.56270996      1.49169858 \
     \\nH               -1.90574581     4.46334868      1.83190490      \\nH  \
             -3.39792922     3.75918514      1.25691780      \\nH             \
  -2.31872708     2.82056749      2.26060411      \\nC               \
-2.37260165     3.56847293      -1.48034394     \\nH               \
-3.40262812     3.74442016      -1.25015261     \\nH               \
-1.91869857     4.48142014      -1.80499668     \\nH               \
-2.30086345     2.83793808      -2.25885050     \\nC               \
-2.37266893     -2.31061124     1.48030510      \\nH               \
-3.39728969     -2.50873058     1.24408268      \\nH               \
-1.90407708     -3.21110366     1.81858765      \\nH               \
-2.32106477     -1.57035902     2.25119008      \\nC               0.20123729 \
     -2.30773074     -0.00565079     \\nH               0.70622489      \
-1.94778066     -0.87761608     \\nH               0.70505418      \
-1.95435453     0.86967417      \\nH               0.20123796      \
-3.37772317     -0.00967645     \\nC               -2.37259345     \
-2.30484826     -1.49173742     \\nH               -1.92828882     \
-3.22431548     -1.81122678     \\nH               -3.40583018     \
-2.46744887     -1.26616506     \\nH               -2.28804170     \
-1.57775185     -2.27217435     \\n\\nC H P 0\\n6-31G*\\n****\\nPd I \
0\\nLANL2DZ\\n****\\n\\nPd I 0\\nLANL2DZ\\n\\n\\n\"\>"], "Output",
 CellChangeTimes->{3.7542440322788544`*^9, 
  3.756645517241603*^9},ExpressionUUID->"ba87a62b-9a39-4375-a090-\
4b80a989bf37"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GenerateGaussianBatch", "Section",
 CellChangeTimes->{{3.752885704257763*^9, 3.7528857210697246`*^9}, {
  3.752885778181991*^9, 
  3.752885781423177*^9}},ExpressionUUID->"3394cc42-6129-4aeb-a64a-\
b0f9c06f5dd8"],

Cell[TextData[{
 StyleBox["GenerateGaussianBatch",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["[file_path]\n\n",
  FontWeight->"Bold"],
 "file_path: path to coordinate_file_directory\n",
 StyleBox["\n",
  FontWeight->"Bold"],
 StyleBox["Output:",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0.5]],
 StyleBox[" ",
  FontWeight->"Bold"],
 "gaussian input files, slurm scripts, sftp input, and .sh batch script.",
 StyleBox["\n\n",
  FontWeight->"Bold"],
 StyleBox["Presets:\n\n",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0.5]],
 "jobType = \[OpenCurlyDoubleQuote]equilibrium\[CloseCurlyDoubleQuote]\n\n\
atomsPerProcessor = 6\nmaxProcessors = 20\nramPerProcessor = 2\ntheory = {\
\[OpenCurlyDoubleQuote]B3LYP\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]\
6-31G*\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]LANL2DZ\
\[CloseCurlyDoubleQuote]}\nmaxAtomicNumberSupported = 36\nchargeCT = \
\[OpenCurlyDoubleQuote]Automatic\[CloseCurlyDoubleQuote]\nmultiplicityCT = \
\[OpenCurlyDoubleQuote]Automatic\[CloseCurlyDoubleQuote]\n\t\n",
 StyleBox["GenerateGaussianBatchPresets",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 " resets back to preset values.\n\n",
 StyleBox["ComputationalTheoryPresets",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 " resets back to preset values."
}], "Text",
 CellChangeTimes->{{3.7528682247379913`*^9, 3.752868257740879*^9}, {
  3.752868364769001*^9, 3.752868382197998*^9}, {3.752868463676658*^9, 
  3.7528684951964607`*^9}, {3.752868714200987*^9, 3.752868715927086*^9}, {
  3.7528689627012005`*^9, 3.7528689750679083`*^9}, {3.752870894230678*^9, 
  3.752870960822487*^9}, {3.7528709929333234`*^9, 3.7528709986806517`*^9}, {
  3.7528710810183616`*^9, 3.752871157271723*^9}, {3.752873530278451*^9, 
  3.7528735322765656`*^9}, {3.752873588630789*^9, 3.7528735970552707`*^9}, {
  3.7528736348224306`*^9, 3.752873680576048*^9}, {3.752924240839156*^9, 
  3.7529242530881877`*^9}, {3.7535555245041265`*^9, 
  3.753555578949283*^9}},ExpressionUUID->"2bce2c9b-2d44-4d20-8e54-\
8ab757b0085e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Generate", " ", "a", " ", "batch", " ", "of", " ", "gaussian", " ", 
     "jobs"}], ",", " ", 
    RowBox[{"slurm", " ", "scripts"}], ",", " ", 
    RowBox[{
     RowBox[{".", "sh"}], " ", "batch", " ", "script"}], ",", " ", 
    RowBox[{"and", " ", "sftp", " ", "scripts"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"jobs", "=", 
     RowBox[{
     "filelist", "[", 
      "\"\<C:\\\\Users\\\\User\\\\Dropbox\\\\1_computation_automation\\\\data\
\\\\0_computation_data\\\\0_coordinate_input\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"GenerateGaussianBatch", "[", 
    RowBox[{"jobs", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7526869699843783`*^9, 3.7526870285965033`*^9}, 
   3.752688253785038*^9, {3.7528633286399508`*^9, 3.7528633582046423`*^9}, {
   3.75286343247389*^9, 3.7528634748613143`*^9}, {3.7528637258286686`*^9, 
   3.7528637259966784`*^9}},ExpressionUUID->"967868d2-fc43-468f-9e08-\
ea8ef2fb8e2d"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Real", " ", "job", " ", "test"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"clusterName", "=", "\"\<della.princeton.edu\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{"userID", "=", "\"\<bjs4\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jobType", "=", "\"\<transition_state\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"theory", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<guess=mix UB3LYP\>\"", ",", "\"\<6-31G*\>\"", ",", 
      "\"\<LANL2DZ\>\""}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7535525102817817`*^9, 3.753552515179797*^9}, {
   3.753552563514923*^9, 3.7535525765719585`*^9}, {3.753554769710672*^9, 
   3.7535547766676874`*^9}, {3.753555617423459*^9, 3.7535556848896527`*^9}, 
   3.754252222802807*^9, 3.7542532638985915`*^9, 3.75426387685694*^9, 
   3.7543220952238336`*^9, {3.7545730013608575`*^9, 3.754573007196866*^9}, {
   3.754936967926756*^9, 3.7549369681047664`*^9}, {3.75794771635594*^9, 
   3.757947716737941*^9}},ExpressionUUID->"7b3cfb4c-0006-43f1-a5f6-\
b722181a1f29"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Real", " ", "job", " ", "test"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"clusterName", "=", "\"\<della.princeton.edu\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{"userID", "=", "\"\<bjs4\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jobType", "=", "\"\<equilibrium\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theory", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<B3LYP\>\"", ",", "\"\<6-31G*\>\"", ",", "\"\<LANL2DZ\>\""}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"GenerateGaussianBatch", "[", 
    RowBox[{
     RowBox[{"Directory", "[", "]"}], "<>", 
     "\"\<\\\\data\\\\0_computation_data\\\\0_coordinate_input\\\\direct_\
arylation_ligand_\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7535525102817817`*^9, 3.753552515179797*^9}, {
   3.753552563514923*^9, 3.7535525765719585`*^9}, {3.753554769710672*^9, 
   3.7535547766676874`*^9}, {3.753555617423459*^9, 3.7535556848896527`*^9}, {
   3.75424998503469*^9, 3.7542499955467186`*^9}, 3.7542613558947487`*^9, {
   3.754572977153822*^9, 3.754572985044834*^9}, {3.754573047300927*^9, 
   3.7545730523669343`*^9}, {3.7549369044421253`*^9, 3.7549369643745527`*^9}, 
   3.754938005683112*^9, {3.757947506091493*^9, 3.7579475336455526`*^9}, {
   3.7579475907866735`*^9, 3.7579475943986835`*^9}, {3.757947689082883*^9, 
   3.7579476981999016`*^9}, 3.757947734697978*^9, {3.7579526691882677`*^9, 
   3.757952678063294*^9}, {3.758300745947772*^9, 3.758300748379776*^9}, {
   3.758306931593416*^9, 3.7583069350054226`*^9}, 
   3.759088494026711*^9},ExpressionUUID->"429cfdaf-9c08-45d5-88fe-\
192ceae03170"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Real", " ", "job", " ", "test"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"clusterName", "=", "\"\<della.princeton.edu\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{"userID", "=", "\"\<tslee\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jobType", "=", "\"\<equilibrium\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theory", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<B3LYP\>\"", ",", "\"\<6-31G*\>\"", ",", "\"\<LANL2DZ\>\""}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"GenerateGaussianBatch", "[", 
    RowBox[{
     RowBox[{"Directory", "[", "]"}], "<>", 
     "\"\<\\\\data\\\\0_computation_data\\\\0_coordinate_input\\\\boronic_\
acid_\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7535525102817817`*^9, 3.753552515179797*^9}, {
   3.753552563514923*^9, 3.7535525765719585`*^9}, {3.753554769710672*^9, 
   3.7535547766676874`*^9}, {3.753555617423459*^9, 3.7535556848896527`*^9}, {
   3.75424998503469*^9, 3.7542499955467186`*^9}, 3.7542613558947487`*^9, {
   3.754572977153822*^9, 3.754572985044834*^9}, {3.754573047300927*^9, 
   3.7545730523669343`*^9}, {3.7549369044421253`*^9, 3.7549369643745527`*^9}, 
   3.754938005683112*^9, {3.757947506091493*^9, 3.7579475336455526`*^9}, {
   3.7579475907866735`*^9, 3.7579475943986835`*^9}, {3.757947689082883*^9, 
   3.7579476981999016`*^9}, 3.757947734697978*^9, {3.7579526691882677`*^9, 
   3.757952678063294*^9}, {3.758300745947772*^9, 3.758300748379776*^9}, {
   3.758306931593416*^9, 3.7583069350054226`*^9}, 3.759088494026711*^9, {
   3.760035561021935*^9, 
   3.7600355974140167`*^9}},ExpressionUUID->"a4ee38c9-49de-4282-a072-\
aaeb245c2659"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example Pipeline (Izzy)", "Chapter",
 CellChangeTimes->{{3.7528730271566744`*^9, 3.752873030940891*^9}, {
  3.75288565491094*^9, 3.7528856639984603`*^9}, {3.752950180271806*^9, 
  3.752950183943016*^9}, {3.762790094600936*^9, 3.7627901244616904`*^9}, {
  3.7639016150294685`*^9, 3.7639016161494703`*^9}, {3.77428242555355*^9, 
  3.7742824271055565`*^9}, {3.7827319357333612`*^9, 3.782731939323745*^9}, {
  3.782732016132264*^9, 
  3.782732025949008*^9}},ExpressionUUID->"2dac40c7-9358-4010-86e7-\
e8ed8b3dfa74"],

Cell[CellGroupData[{

Cell["Generate and run G16 jobs", "Subsection",
 CellChangeTimes->{{3.755618633516684*^9, 3.755618640286701*^9}, {
  3.755618684227798*^9, 3.7556186894078083`*^9}, {3.755631238414359*^9, 
  3.75563125566341*^9}, {3.7557211810264525`*^9, 3.755721183275462*^9}, {
  3.756465040238958*^9, 3.756465044248187*^9}, {3.7567411494442687`*^9, 
  3.756741152832274*^9}, {3.7638408426641974`*^9, 
  3.763840859016133*^9}},ExpressionUUID->"8880fe8f-9e30-4091-82ce-\
6e3203ab94ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Generate", " ", "structures"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"chargeOB", "=", "\"\<Automatic\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{"multiplicityOB", "=", "\"\<Automatic\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"OpenBabel", "[", 
    RowBox[{"\"\<izzy_\>\"", ",", "\"\<smiles\>\""}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.763901638607509*^9, 3.7639016394595113`*^9}, {
   3.763901707802619*^9, 3.763901728347667*^9}, {3.763904031917577*^9, 
   3.7639040437965956`*^9}, {3.7649520368110733`*^9, 
   3.7649520383220754`*^9}, {3.768928305415387*^9, 3.7689283192221766`*^9}, 
   3.768928352113058*^9, {3.7742825959403024`*^9, 3.774282604704336*^9}, 
   3.7827320951427784`*^9},ExpressionUUID->"9ab925a4-0c85-4b56-9cf2-\
c7ccb6e3bfe1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Generate", " ", "gaussian", " ", "input", " ", "files"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Computation", " ", "Parameters"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"atomsPerProcessor", "=", "6"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"maxProcessors", "=", "20"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"ramPerProcessor", "=", "2"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"theory", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<B3LYP\>\"", ",", "\"\<6-31G*\>\"", ",", "\"\<LANL2DZ\>\""}], 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"maxAtomicNumberSupported", "=", "36"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"chargeCT", "=", "\"\<Automatic\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{"multiplicityCT", "=", "\"\<Automatic\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Cluster", " ", "Parameters"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"clusterName", "=", "\"\<della.princeton.edu\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{"userID", "=", "\"\<bjs4\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jobType", "=", "\"\<equilibrium\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"GenerateGaussianBatch", "[", 
    RowBox[{
     RowBox[{"Directory", "[", "]"}], "<>", 
     "\"\<\\\\data\\\\0_computation_data\\\\0_coordinate_input\\\\izzy_\>\""}]\
, "]"}]}]}]], "Input",
 CellChangeTimes->{{3.763903320385419*^9, 3.7639033317354355`*^9}, {
  3.763904050137605*^9, 3.7639040583716173`*^9}, {3.7649522161363745`*^9, 
  3.764952218083377*^9}, {3.7689289178384156`*^9, 3.768928933320301*^9}, {
  3.774282629876449*^9, 3.7742826357594757`*^9}, {3.78273209813476*^9, 
  3.782732100455589*^9}},ExpressionUUID->"b46bc6a7-56d2-4f20-9a81-\
04fb6fb9d0bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check for successful completion", "Subsection",
 CellChangeTimes->{{3.755618633516684*^9, 3.755618640286701*^9}, {
  3.755618684227798*^9, 3.7556186894078083`*^9}, {3.755631238414359*^9, 
  3.75563125566341*^9}, {3.7557211810264525`*^9, 3.755721183275462*^9}, {
  3.756465040238958*^9, 3.756465044248187*^9}, {3.7567411494442687`*^9, 
  3.756741152832274*^9}, {3.7638425122736936`*^9, 
  3.763842522828297*^9}},ExpressionUUID->"9d186f48-1f45-46a6-99fc-\
9c9efcbcfef8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "root", "=", 
   "\"\<C:\\\\Users\\\\User\\\\Dropbox\\\\1_computation_automation\\\\data\\\\\
0_computation_data\\\\1_submission\\\\\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"classes", "=", 
    RowBox[{"{", "\"\<izzy_\>\"", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtractDescriptorsPresets", "=", 
    RowBox[{"{", 
     RowBox[{"\"\<ground_state\>\"", ",", "\"\<excited_state\>\""}], "}"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"failedjobs", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"descriptors", "=", 
    RowBox[{"{", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"t", "=", "1"}], ",", "\n", "\t", 
    RowBox[{"t", "<", 
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{"classes", ",", "_"}], "]"}], "+", "1"}]}], ",", "\n", "\t", 
    RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"(", "\n", "\t\t", 
     RowBox[{
      RowBox[{"With", "[", "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"files", "=", 
          RowBox[{"filelist", "[", 
           RowBox[{"root", "<>", 
            RowBox[{"classes", "[", 
             RowBox[{"[", "t", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{
         RowBox[{"check", "=", 
          RowBox[{"files", "[", 
           RowBox[{"[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"StringContainsQ", "[", 
                RowBox[{"files", ",", "\"\<.log\>\""}], "]"}], ",", "True"}], 
              "]"}], "]"}], "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       "\t\t", "]"}], ";", "\n", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"convergenceTable", "=", 
       RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", "\t\t\t\t", 
          RowBox[{
           RowBox[{"ExtractDescriptors", "[", 
            RowBox[{"check", "[", 
             RowBox[{"[", "l", "]"}], "]"}], "]"}], ";", 
           "\[IndentingNewLine]", "\t\t\t\t", 
           RowBox[{"If", "[", "\[IndentingNewLine]", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"Count", "[", 
               RowBox[{"descriptorVector", ",", "_"}], "]"}], ">", "5"}], ",",
              "\[IndentingNewLine]", "\t\t\t\t\t", 
             RowBox[{
              RowBox[{"Transpose", "[", "descriptorVector", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             "\t\t\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{"\"\<failed\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", "56", ",", "1"}], "}"}]}], 
              "]"}]}], "\[IndentingNewLine]", "\t\t\t\t", "]"}]}], 
          "\[IndentingNewLine]", "\t\t\t", ")"}], ",", "\[IndentingNewLine]", 
         "\t\t\t", 
         RowBox[{"{", 
          RowBox[{"l", ",", "1", ",", 
           RowBox[{"Count", "[", 
            RowBox[{"check", ",", "_"}], "]"}], ",", "1"}], "}"}]}], 
        "\[IndentingNewLine]", "\t\t", "]"}]}], ";", "\n", "\t\t", "\n", 
      "\t\t", 
      RowBox[{"cvtable", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"For", "[", "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{
        RowBox[{"s", "=", "1"}], ",", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{"s", "<", 
         RowBox[{
          RowBox[{"Count", "[", 
           RowBox[{"convergenceTable", ",", "_"}], "]"}], "+", "1"}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{"s", "++"}], ",", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{"If", "[", "\[IndentingNewLine]", "\t\t\t\t", 
         RowBox[{
          RowBox[{"And", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"convergenceTable", "[", 
                RowBox[{"[", "s", "]"}], "]"}], ",", "_"}], "]"}], ">", "2"}], 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{
               RowBox[{"StringContainsQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"convergenceTable", "[", 
                   RowBox[{"[", "s", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<fail\>\""}], 
                "]"}], "\[Equal]", "False"}]}], "*)"}], ",", "True"}], "]"}], 
          ",", "\[IndentingNewLine]", "\t\t\t\t", 
          RowBox[{"cvtable", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"cvtable", ",", 
             RowBox[{"Prepend", "[", 
              RowBox[{
               RowBox[{"convergenceTable", "[", 
                RowBox[{"[", "s", "]"}], "]"}], ",", "s"}], "]"}]}], 
            "]"}]}]}], "\[IndentingNewLine]", "\t\t\t", "]"}]}], 
       "\[IndentingNewLine]", "\t\t", "]"}], ";", "\n", "\t\t", "\n", "\t\t", 
      RowBox[{"descriptors", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"descriptors", ",", "cvtable"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t\t", "\n", "\t\t", 
      RowBox[{"failed", "=", 
       RowBox[{"check", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", "cvtable", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"StringContainsQ", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Transpose", "[", "cvtable", "]"}], "[", 
                 RowBox[{"[", "6", "]"}], "]"}], ",", "\"\<f\>\""}], "]"}], 
              ",", "True"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
      "\n", "\t\t", 
      RowBox[{"failedjobs", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"failed", ",", "failedjobs"}], "]"}]}], ";"}], "\n", "\n", 
     "\t", ")"}]}], "\n", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.7638412425610704`*^9, 3.7638412580499563`*^9}, {
   3.763841397244918*^9, 3.7638413981549697`*^9}, {3.7638414285967107`*^9, 
   3.7638416532195587`*^9}, {3.7638416836532993`*^9, 
   3.7638417075616665`*^9}, {3.763841754087328*^9, 3.7638419193337793`*^9}, {
   3.7638419694676466`*^9, 3.763841980505278*^9}, 3.7638420162703238`*^9, {
   3.763842048353159*^9, 3.763842061557914*^9}, {3.763842343825059*^9, 
   3.763842395705026*^9}, {3.763845861931283*^9, 3.7638458671715827`*^9}, {
   3.763928010230025*^9, 3.7639280135232134`*^9}, {3.763977061939555*^9, 
   3.7639770808936396`*^9}, {3.763982863877407*^9, 3.7639828686376796`*^9}, {
   3.7639877453220353`*^9, 3.7639878260761585`*^9}, {3.764963101124525*^9, 
   3.7649631196435843`*^9}, {3.7649631652451925`*^9, 
   3.7649631836042423`*^9}, {3.7656669987073526`*^9, 
   3.7656670210676317`*^9}, {3.7665290308179903`*^9, 
   3.7665290317630444`*^9}, {3.7691162269471827`*^9, 
   3.7691162301093636`*^9}, {3.771881098978397*^9, 3.7718811079059076`*^9}, {
   3.771920317909009*^9, 3.771920323241314*^9}, {3.772013389350544*^9, 
   3.772013389486552*^9}, {3.774605469033473*^9, 3.774605472084647*^9}, {
   3.77460556846616*^9, 3.7746055927375484`*^9}, 3.774605782880424*^9},
 Background->RGBColor[
  0.18823529411764706`, 0.37254901960784315`, 
   0.37254901960784315`],ExpressionUUID->"d777f96f-8bb9-4143-9a8b-\
211cdcd36036"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resubmit failed jobs", "Subsection",
 CellChangeTimes->{{3.755618633516684*^9, 3.755618640286701*^9}, {
  3.755618684227798*^9, 3.7556186894078083`*^9}, {3.755631238414359*^9, 
  3.75563125566341*^9}, {3.7557211810264525`*^9, 3.755721183275462*^9}, {
  3.756465040238958*^9, 3.756465044248187*^9}, {3.7567411494442687`*^9, 
  3.756741152832274*^9}, {3.7638425311137714`*^9, 
  3.763842536652088*^9}},ExpressionUUID->"77b03170-2e40-41d1-b1a1-\
5bf90b99925c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"failedjobs", "=", 
    RowBox[{"(", 
     RowBox[{"failedjobs", "//", "Flatten"}], ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"With", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"coord", "=", 
        RowBox[{"ExtractCoordinates", "[", 
         RowBox[{"failedjobs", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"If", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"coord", "\[Equal]", "\"\<\>\""}], ",", "\t\t", "\n", 
         "\t\t\t", 
         RowBox[{"(", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"input", "=", 
            RowBox[{"Import", "[", 
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{
                RowBox[{"failedjobs", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], ",", 
                RowBox[{"\"\<.log\>\"", "\[Rule]", "\"\<.com\>\""}]}], "]"}], 
              ",", "\"\<Text\>\""}], "]"}]}], ";", "\n", "\t\t\t\t", 
           RowBox[{"Export", "[", 
            RowBox[{
             RowBox[{"StringReplace", "[", 
              RowBox[{
               RowBox[{"failedjobs", "[", 
                RowBox[{"[", "n", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<123.log\>\"", "\[Rule]", "\"\<_error.gjf\>\""}],
                  ",", 
                 RowBox[{
                  RowBox[{"Longest", "[", 
                   RowBox[{"__", "~~", "\"\<\\\\\>\""}], "]"}], "->", 
                  RowBox[{
                   RowBox[{"Directory", "[", "]"}], "<>", 
                   "\"\<\\\\data\\\\0_computation_data\\\\0_coordinate_input\\\
\\round3_inorg_reruns1\\\\\>\""}]}]}], "}"}]}], "]"}], ",", "input", ",", 
             "\"\<Text\>\""}], "]"}]}], "\n", "\t\t\t", ")"}], ",", "\n", 
         "\t\t\t", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{"failedjobs", "[", 
              RowBox[{"[", "n", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<123.log\>\"", "\[Rule]", "\"\<.gjf\>\""}], ",", 
               RowBox[{
                RowBox[{"Longest", "[", 
                 RowBox[{"__", "~~", "\"\<\\\\\>\""}], "]"}], "->", 
                RowBox[{
                 RowBox[{"Directory", "[", "]"}], "<>", 
                 "\"\<\\\\data\\\\0_computation_data\\\\0_coordinate_input\\\\\
round3_inorg_reruns1\\\\\>\""}]}]}], "}"}]}], "]"}], ",", "coord", ",", 
           "\"\<Text\>\""}], "]"}]}], "\n", "\t\t", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\t", "]"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", 
      RowBox[{"Count", "[", 
       RowBox[{"failedjobs", ",", "_"}], "]"}], ",", "1"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.7638412425610704`*^9, 3.7638412580499563`*^9}, {
   3.763841397244918*^9, 3.7638413981549697`*^9}, {3.7638414285967107`*^9, 
   3.7638416532195587`*^9}, {3.7638416836532993`*^9, 
   3.7638417075616665`*^9}, {3.763841754087328*^9, 3.7638419193337793`*^9}, {
   3.7638419694676466`*^9, 3.763841980505278*^9}, 3.7638420162703238`*^9, {
   3.763842048353159*^9, 3.763842061557914*^9}, {3.763842343825059*^9, 
   3.763842395705026*^9}, {3.763842562418562*^9, 3.763842611704381*^9}, {
   3.7638426488165035`*^9, 3.763842663566347*^9}, {3.7638427135432053`*^9, 
   3.763842810528753*^9}, {3.763842914412695*^9, 3.763842916015786*^9}, {
   3.7638429538199487`*^9, 3.7638429541559677`*^9}, {3.7638429953803253`*^9, 
   3.7638429955453353`*^9}, {3.7638430277601776`*^9, 3.763843066138373*^9}, {
   3.7639281707572064`*^9, 3.7639282256033435`*^9}, {3.76392827799334*^9, 
   3.7639282925651736`*^9}, {3.7639289792994523`*^9, 
   3.7639290200527835`*^9}, {3.763929248593855*^9, 3.7639293265513144`*^9}, {
   3.7639293689827414`*^9, 3.7639293759271383`*^9}, {3.763977156417959*^9, 
   3.7639771593151245`*^9}, {3.7639830816178613`*^9, 3.76398308457103*^9}, {
   3.7649639100747943`*^9, 3.764963923627569*^9}, {3.7649642180884113`*^9, 
   3.7649642228916864`*^9}, {3.7649643491289062`*^9, 
   3.7649644353068357`*^9}, {3.764964480573425*^9, 3.764964488687889*^9}, {
   3.7649645206947193`*^9, 3.7649645782640123`*^9}, {3.76498179490133*^9, 
   3.764981803210805*^9}, {3.771865012970723*^9, 3.771865022304257*^9}, {
   3.7718650703720064`*^9, 3.771865124239087*^9}, 3.7718813664366946`*^9, {
   3.771881413648395*^9, 3.7718814170865917`*^9}},
 Background->RGBColor[
  0.18823529411764706`, 0.37254901960784315`, 
   0.37254901960784315`],ExpressionUUID->"bf373414-d809-4d07-9422-\
a08d0806332b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Generate", " ", "a", " ", "batch", " ", "of", " ", "jobs", " ", "to", " ",
     "submit", " ", "on", " ", "Della"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Computation", " ", "Parameters"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"atomsPerProcessor", "=", "6"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"maxProcessors", "=", "20"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"ramPerProcessor", "=", "2"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"theory", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<B3LYP\>\"", ",", "\"\<6-31G*\>\"", ",", "\"\<LANL2DZ\>\""}], 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"maxAtomicNumberSupported", "=", "36"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"chargeCT", "=", "\"\<Automatic\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{"multiplicityCT", "=", "\"\<Automatic\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Cluster", " ", "Parameters"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"clusterName", "=", "\"\<della.princeton.edu\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{"userID", "=", "\"\<bjs4\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jobType", "=", "\"\<equilibrium\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"GenerateGaussianBatch", "[", 
    RowBox[{
     RowBox[{"Directory", "[", "]"}], "<>", 
     "\"\<\\\\data\\\\0_computation_data\\\\0_coordinate_input\\\\round3_\
inorg_reruns1\>\""}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7638412425610704`*^9, 3.7638412580499563`*^9}, {
   3.763841397244918*^9, 3.7638413981549697`*^9}, {3.7638414285967107`*^9, 
   3.7638416532195587`*^9}, {3.7638416836532993`*^9, 
   3.7638417075616665`*^9}, {3.763841754087328*^9, 3.7638419193337793`*^9}, {
   3.7638419694676466`*^9, 3.763841980505278*^9}, 3.7638420162703238`*^9, {
   3.763842048353159*^9, 3.763842061557914*^9}, {3.763842343825059*^9, 
   3.763842395705026*^9}, {3.763842562418562*^9, 3.763842611704381*^9}, {
   3.7638426488165035`*^9, 3.763842663566347*^9}, {3.7638427135432053`*^9, 
   3.763842810528753*^9}, {3.763842914412695*^9, 3.763842916015786*^9}, {
   3.7638429538199487`*^9, 3.7638429541559677`*^9}, {3.7638429953803253`*^9, 
   3.7638429955453353`*^9}, {3.7638430277601776`*^9, 3.763843066138373*^9}, {
   3.7639281707572064`*^9, 3.7639282256033435`*^9}, {3.76392827799334*^9, 
   3.763928286895849*^9}, 3.763977925740962*^9, 3.7639832174676313`*^9, {
   3.764967940694332*^9, 3.7649679453716*^9}, {3.7649832852555733`*^9, 
   3.7649832853935814`*^9}, {3.771880995055453*^9, 3.7718810142095485`*^9}, {
   3.7718838634355145`*^9, 3.7718838636985297`*^9}, {3.7827321211262875`*^9, 
   3.7827321220537767`*^9}},
 Background->RGBColor[
  0.18823529411764706`, 0.37254901960784315`, 
   0.37254901960784315`],ExpressionUUID->"9115b3f4-4125-4f3c-82af-\
34caa14274f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check for imaginary frequencies", "Subsection",
 CellChangeTimes->{{3.755618633516684*^9, 3.755618640286701*^9}, {
  3.755618684227798*^9, 3.7556186894078083`*^9}, {3.755631238414359*^9, 
  3.75563125566341*^9}, {3.7557211810264525`*^9, 3.755721183275462*^9}, {
  3.756465040238958*^9, 3.756465044248187*^9}, {3.7567403274083652`*^9, 
  3.756740334373375*^9}},ExpressionUUID->"11583a6d-0c8f-43bb-86d6-\
1907bc4316f9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "root", "=", 
   "\"\<C:\\\\Users\\\\User\\\\Dropbox\\\\1_computation_automation\\\\data\\\\\
0_computation_data\\\\1_submission\\\\\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"classes", "=", 
    RowBox[{"{", "\"\<izzy_\>\"", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtractDescriptorsPresets", "=", 
    RowBox[{"{", 
     RowBox[{"\"\<ground_state\>\"", ",", "\"\<excited_state\>\""}], "}"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"imgfreq", "=", 
    RowBox[{"{", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"t", "=", "1"}], ",", "\n", "\t", 
    RowBox[{"t", "<", 
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{"classes", ",", "_"}], "]"}], "+", "1"}]}], ",", "\n", "\t", 
    RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"(", "\n", "\t\t", 
     RowBox[{
      RowBox[{"With", "[", "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"files", "=", 
          RowBox[{"filelist", "[", 
           RowBox[{"root", "<>", 
            RowBox[{"classes", "[", 
             RowBox[{"[", "t", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{
         RowBox[{"check", "=", 
          RowBox[{"files", "[", 
           RowBox[{"[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"StringContainsQ", "[", 
                RowBox[{"files", ",", "\"\<.log\>\""}], "]"}], ",", "True"}], 
              "]"}], "]"}], "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       "\t\t", "]"}], ";", "\n", "\t\t", "\n", "\t\t", 
      RowBox[{"check", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{"check", ",", "failedjobs"}], "]"}]}], ";", "\t", "\n", 
      "\t\t", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"frequencyCheck", "=", 
       RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", "\t\t\t\t", 
          RowBox[{
           RowBox[{"FrequencyData", "[", 
            RowBox[{"check", "[", 
             RowBox[{"[", "l", "]"}], "]"}], "]"}], ";", 
           "\[IndentingNewLine]", "\t\t\t\t", 
           RowBox[{"If", "[", "\[IndentingNewLine]", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"Count", "[", 
               RowBox[{
                RowBox[{"frequencyData", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "_"}], "]"}], 
              "\[Equal]", "7"}], ",", "\[IndentingNewLine]", "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{"l", ",", 
               RowBox[{"AnyTrue", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", "frequencyData", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "]"}], "<", "0."}], ",", 
                   RowBox[{"{", 
                    RowBox[{"n", ",", "1", ",", 
                    RowBox[{"Count", "[", 
                    RowBox[{"frequencyData", ",", "_"}], "]"}], ",", "1"}], 
                    "}"}]}], "]"}], ",", "TrueQ"}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{"l", ",", "True"}], "}"}]}], "\[IndentingNewLine]", 
            "\t\t\t\t", "]"}]}], "\[IndentingNewLine]", "\t\t\t", ")"}], ",", 
         "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{"{", 
          RowBox[{"l", ",", "1", ",", 
           RowBox[{"Count", "[", 
            RowBox[{"check", ",", "_"}], "]"}], ",", "1"}], "}"}]}], 
        "\[IndentingNewLine]", "\t\t", "]"}]}], ";", "\n", "\t\t", "\n", 
      "\t\t", 
      RowBox[{"imgfreq", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"imgfreq", ",", "frequencyCheck"}], "]"}]}], ";"}], "\n", 
     "\n", "\t", ")"}]}], "\n", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.7638412425610704`*^9, 3.7638412580499563`*^9}, {
   3.763841397244918*^9, 3.7638413981549697`*^9}, {3.7638414285967107`*^9, 
   3.7638416532195587`*^9}, {3.7638416836532993`*^9, 
   3.7638417075616665`*^9}, {3.763841754087328*^9, 3.7638419193337793`*^9}, {
   3.7638419694676466`*^9, 3.763841980505278*^9}, 3.7638420162703238`*^9, {
   3.763842048353159*^9, 3.763842061557914*^9}, {3.763842343825059*^9, 
   3.763842395705026*^9}, {3.763845861931283*^9, 3.7638458671715827`*^9}, {
   3.763846166160684*^9, 3.7638462175096207`*^9}, {3.7638467017383175`*^9, 
   3.763846732220061*^9}, {3.7638468539730244`*^9, 3.763846869650921*^9}, 
   3.7639881454006433`*^9, {3.763988210965744*^9, 3.763988218707755*^9}, 
   3.7649878173167925`*^9, {3.7665291434024296`*^9, 3.7665291494087734`*^9}, {
   3.7720134941285367`*^9, 3.77201354435341*^9}, {3.7746057445862336`*^9, 
   3.7746057892397876`*^9}},
 Background->RGBColor[
  0.18823529411764706`, 0.37254901960784315`, 
   0.37254901960784315`],ExpressionUUID->"6e4826ea-e448-4038-b6f3-\
31aa3e613210"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extract/compute descriptors", "Subsection",
 CellChangeTimes->{{3.755618633516684*^9, 3.755618640286701*^9}, {
  3.755618684227798*^9, 3.7556186894078083`*^9}, {3.755631238414359*^9, 
  3.75563125566341*^9}, {3.7557211810264525`*^9, 3.755721183275462*^9}, {
  3.756465040238958*^9, 3.756465044248187*^9}, {3.7567403274083652`*^9, 
  3.756740334373375*^9}, {3.7581176947718525`*^9, 3.7581177477759686`*^9}, {
  3.7827321351078577`*^9, 
  3.782732139258747*^9}},ExpressionUUID->"478ec20e-6758-4e05-91aa-\
3db30ef5dd11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"directories", " ", "and", " ", "molecule", " ", "classes"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ExtractDescriptorsPresets", ":=", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{
      "\"\<ground_state\>\"", ",", "\n", "\t", "\"\<excited_state\>\"", ",", 
       "\n", "\t", "\"\<atom_specific\>\""}], "\n", "}"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
    "root", "=", 
     "\"\<C:\\\\Users\\\\User\\\\Dropbox\\\\1_computation_automation\\\\data\\\
\\0_computation_data\\\\1_submission\\\\\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{"classes", "=", 
     RowBox[{"{", "\"\<izzy_\>\"", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Reset", " ", "to", " ", "standard"}], "*)"}], "\n", 
   RowBox[{"ExtractDescriptorsPresets", ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"For", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"t", "=", "1"}], ",", "\n", "\t", 
      RowBox[{"t", "<", 
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{"classes", ",", "_"}], "]"}], "+", "1"}]}], ",", "\n", "\t", 
      RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", "\t", 
      RowBox[{"(", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
           "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
           "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
           "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
           "**", "**", "**", "**", "**", "**", "**"}], "*", " ", "List", " ", 
         "of", " ", "file", " ", "paths", " ", "for", " ", "the", " ", 
         "class", " ", "of", " ", "molecules"}], "*)"}], "\n", "\t\t", 
       RowBox[{
        RowBox[{"With", "[", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"files", "=", 
            RowBox[{"filelist", "[", 
             RowBox[{"root", "<>", 
              RowBox[{"classes", "[", 
               RowBox[{"[", "t", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{
           RowBox[{"pathlist", "=", 
            RowBox[{"files", "[", 
             RowBox[{"[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"StringContainsQ", "[", 
                  RowBox[{"files", ",", "\"\<.log\>\""}], "]"}], ",", 
                 "True"}], "]"}], "]"}], "]"}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "\t\t", "]"}], ";", "\n", "\t\t", "\n", 
        "\t\t", 
        RowBox[{"pathlist", "=", 
         RowBox[{"Complement", "[", 
          RowBox[{"pathlist", ",", "failedjobs"}], "]"}]}], ";", "\t", "\n", 
        "\t\t", 
        RowBox[{"pathlist", "=", 
         RowBox[{"Complement", "[", 
          RowBox[{"pathlist", ",", "failed"}], "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
            "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
           "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
            "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
           "**", "**", "**", "**", "**", "**", "**", "**", "**"}], "*", " ", 
          "Standard", " ", "DFT", " ", "descriptors"}], "*)"}], 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"ExtractDescriptors", "[", 
         RowBox[{"pathlist", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"descriptorCount", "=", 
         RowBox[{"Count", "[", 
          RowBox[{"descriptorVector", ",", "_"}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"columnHeads", "=", 
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Transpose", "[", "descriptorVector", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<file_name\>\""}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"columnHeads", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"classes", "[", 
             RowBox[{"[", "t", "]"}], "]"}], "<>", 
            RowBox[{"columnHeads", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", 
             RowBox[{"Count", "[", 
              RowBox[{"columnHeads", ",", "_"}], "]"}], ",", "1"}], "}"}]}], 
          "]"}]}], ";", "\n", "\t\t", "\n", "\t\t", 
        RowBox[{"Quiet", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"dft", "=", 
           RowBox[{"Prepend", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", "\t\t\t\t", 
              RowBox[{
               RowBox[{"(", "\[IndentingNewLine]", "\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"ExtractDescriptors", "[", 
                  RowBox[{"pathlist", "[", 
                   RowBox[{"[", "l", "]"}], "]"}], "]"}], ";", 
                 "\[IndentingNewLine]", "\t\t\t\t\t", 
                 RowBox[{"If", "[", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{"descriptorVector", ",", "_"}], "]"}], "\[Equal]",
                     "descriptorCount"}], ",", "\[IndentingNewLine]", 
                   "\t\t\t\t\t\t", 
                   RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", "descriptorVector", "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"pathlist", "[", 
                    RowBox[{"[", "l", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Longest", "[", 
                    RowBox[{"__", "~~", "\"\<\\\\\>\""}], "]"}], "\[Rule]", 
                    "\"\<\>\""}], ",", 
                    RowBox[{"\"\<123.log\>\"", "\[Rule]", "\"\<\>\""}]}], 
                    "}"}]}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
                   "\t\t\t\t\t\t", 
                   RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"\"\<failed\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", "1", ",", "descriptorCount", ",", "1"}],
                     "}"}]}], "]"}], ",", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"pathlist", "[", 
                    RowBox[{"[", "l", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Longest", "[", 
                    RowBox[{"__", "~~", "\"\<\\\\\>\""}], "]"}], "\[Rule]", 
                    "\"\<\>\""}], ",", 
                    RowBox[{"\"\<123.log\>\"", "\[Rule]", "\"\<\>\""}]}], 
                    "}"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
                  "\t\t\t\t\t", "]"}]}], "\[IndentingNewLine]", "\t\t\t\t", 
                ")"}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"l", ",", "1", ",", 
                 RowBox[{"Count", "[", 
                  RowBox[{"pathlist", ",", "_"}], "]"}], ",", "1"}], "}"}]}], 
              "\[IndentingNewLine]", "\t\t\t", "]"}], ",", 
             "\[IndentingNewLine]", "\t\t\t", "columnHeads"}], 
            "\[IndentingNewLine]", "\t\t", "]"}]}], ";"}], "\n", "\t\t", 
         "]"}], ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
            "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
           "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
            "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
           "**", "**", "**", "**", "**", "**", "**", "**", "**"}], "*", " ", 
          "Atom", " ", "specific", " ", "descriptors"}], "*)"}], "\t\t\t\t\t",
         "\n", "\t\t", 
        RowBox[{"pathlistAtom", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"pathlist", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"dft", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
               "\"\<failed\>\""}], "]"}], ")"}], "-", "1"}]}], "]"}]}], ";", 
        "\t", "\n", "\t\t", "\n", "\t\t", 
        RowBox[{"ExtractDescriptors", "[", 
         RowBox[{"pathlistAtom", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"descriptorCount", "=", 
         RowBox[{"Count", "[", 
          RowBox[{
           RowBox[{"atomDescriptorMatrixLabeled", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "_"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"columnHeads", "=", 
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"classes", "[", 
                RowBox[{"[", "t", "]"}], "]"}], "<>", "\"\<atom\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"m", "-", "1"}], "]"}], "<>", "\"\<_\>\"", "<>", 
               RowBox[{
                RowBox[{"atomDescriptorMatrixLabeled", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "n", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
              "\t\t\t", 
              RowBox[{"{", 
               RowBox[{"m", ",", "2", ",", 
                RowBox[{"Count", "[", 
                 RowBox[{"atomDescriptorMatrixLabeled", ",", "_"}], "]"}], 
                ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "3", ",", "descriptorCount", ",", "1"}], 
               "}"}]}], "\[IndentingNewLine]", "\t\t\t", "]"}], "]"}], ",", 
           "\"\<file_name\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"atomic", "=", 
         RowBox[{"Prepend", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", "\t\t\t\t", 
            RowBox[{
             RowBox[{"(", "\[IndentingNewLine]", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"ExtractDescriptors", "[", 
                RowBox[{"pathlistAtom", "[", 
                 RowBox[{"[", "l", "]"}], "]"}], "]"}], ";", 
               "\[IndentingNewLine]", "\t\t\t\t\t", 
               RowBox[{"If", "[", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Count", "[", 
                   RowBox[{
                    RowBox[{"atomDescriptorMatrixLabeled", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "_"}], "]"}], 
                  "\[Equal]", "descriptorCount"}], ",", "\[IndentingNewLine]",
                  "\t\t\t\t\t\t", 
                 RowBox[{"Prepend", "[", 
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Rest", "[", "atomDescriptorMatrixLabeled", "]"}],
                     "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ";;"}], "]"}], "]"}], "]"}], "]"}], ",", 
                   RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"pathlistAtom", "[", 
                    RowBox[{"[", "l", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Longest", "[", 
                    RowBox[{"__", "~~", "\"\<\\\\\>\""}], "]"}], "\[Rule]", 
                    "\"\<\>\""}], ",", 
                    RowBox[{"\"\<123.log\>\"", "\[Rule]", "\"\<\>\""}]}], 
                    "}"}]}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
                 "\t\t\t\t\t\t", 
                 RowBox[{"Prepend", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{"\"\<failed\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", "1", ",", "descriptorCount", ",", "1"}],
                     "}"}]}], "]"}], ",", 
                   RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"pathlistAtom", "[", 
                    RowBox[{"[", "l", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Longest", "[", 
                    RowBox[{"__", "~~", "\"\<\\\\\>\""}], "]"}], "\[Rule]", 
                    "\"\<\>\""}], ",", 
                    RowBox[{"\"\<123.log\>\"", "\[Rule]", "\"\<\>\""}]}], 
                    "}"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
                "\t\t\t\t\t", "]"}]}], "\[IndentingNewLine]", "\t\t\t\t", 
              ")"}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{"l", ",", "1", ",", 
               RowBox[{"Count", "[", 
                RowBox[{"pathlistAtom", ",", "_"}], "]"}], ",", "1"}], 
              "}"}]}], "\[IndentingNewLine]", "\t\t\t", "]"}], ",", 
           "\[IndentingNewLine]", "\t\t\t", "columnHeads"}], 
          "\[IndentingNewLine]", "\t\t", "]"}]}], ";", "\n", "\t\t", "\n", 
        "\t\t", 
        RowBox[{"allInput", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"StringReplace", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Longest", "[", 
                 RowBox[{"__", "~~", "\"\<\\\\\>\""}], "]"}], "\[Rule]", 
                "\"\<\>\""}], ",", 
               RowBox[{"\"\<123.log\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], 
            "]"}], "&"}], "/@", "pathlist"}]}], ";", "\n", "\t\t", 
        RowBox[{"atomic", "=", 
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{"If", "[", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"atomic", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"allInput", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", "\n", 
              "\t\t\t\t", 
              RowBox[{"atomic", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"atomic", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"allInput", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "//", 
                   "Flatten"}], ")"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", "\n", 
              "\t\t\t\t", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{"\"\<failed\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"m", ",", "1", ",", 
                   RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{
                    RowBox[{"atomic", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "_"}], "]"}], "-", 
                    "1"}], ",", "1"}], "}"}]}], "]"}], "//", 
               RowBox[{"Prepend", "[", 
                RowBox[{"allInput", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "]"}]}]}], "\n", "\t\t\t", 
             "]"}], ",", "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{"Count", "[", 
               RowBox[{"allInput", ",", "_"}], "]"}], ",", "1"}], "}"}]}], 
           "\n", "\t\t", "]"}], "//", 
          RowBox[{"Prepend", "[", 
           RowBox[{"atomic", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";", "\n", "\t\t", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{
           "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
             "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
             "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
             "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
             "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}], 
           "*", " ", "Atom", " ", "specific", " ", "descriptors"}], " ", "-", 
          " ", 
          RowBox[{"min", " ", "max", " ", "chargers"}]}], "*)"}], "\t\t", 
        "\n", "\t\t", 
        RowBox[{"pathlistHot", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"pathlist", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"dft", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
               "\"\<failed\>\""}], "]"}], ")"}], "-", "1"}]}], "]"}]}], ";", 
        " ", 
        RowBox[{"(*", 
         RowBox[{
         "If", " ", "you", " ", "want", " ", "to", " ", "remove", " ", 
          "failed", " ", "jobs"}], "*)"}], "\n", "\t\t", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"pathlistHot", "=", "pathlist"}], ";"}], "*)"}], "\n", 
        "\t\t", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{
         "function", " ", "for", " ", "matching", " ", "column", " ", 
          "headers"}], "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"GetColumns", "[", 
          RowBox[{"matrix_", ",", "headers_"}], "]"}], ":=", 
         RowBox[{"With", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{"temp", "=", 
             RowBox[{"atomDescriptorMatrix", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", 
                RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t\t\t", 
                 RowBox[{
                  RowBox[{"If", "[", "\[IndentingNewLine]", "\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"matrix", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"headers", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "//", 
                    "Flatten"}], ")"}], ",", "_"}], "]"}], "\[Equal]", "1"}], 
                    ",", "\[IndentingNewLine]", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"matrix", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"headers", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "//", 
                    "Flatten"}], ")"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", "\t\t\t\t\t", "1"}], 
                   "\[IndentingNewLine]", "\t\t\t\t", "]"}], ",", 
                  "\[IndentingNewLine]", "\t\t\t\t", 
                  RowBox[{"{", 
                   RowBox[{"n", ",", "1", ",", 
                    RowBox[{"Count", "[", 
                    RowBox[{"headers", ",", "_"}], "]"}], ",", "1"}], "}"}]}],
                  "\[IndentingNewLine]", "\t\t\t\t", "]"}]}], "]"}], "]"}]}], 
            "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Table", "[", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"(", "\n", "\t\t\t\t\t", 
               RowBox[{"If", "[", "\n", "\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"temp", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"headers", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", "\n", 
                 "\t\t\t\t\t\t", 
                 RowBox[{"temp", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"headers", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "//", 
                    "Flatten"}], ")"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "\n",
                  "\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"headers", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"\"\<NA\>\"", ",", 
                    RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{"temp", ",", "_"}], "]"}], "-", "1"}]}], "]"}]}], 
                   "}"}], "//", "Flatten"}]}], "\n", "\t\t\t\t\t", "]"}], 
               "\n", "\t\t\t\t", ")"}], ",", "\n", "\t\t\t\t", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", 
                RowBox[{"Count", "[", 
                 RowBox[{"headers", ",", "_"}], "]"}], ",", "1"}], "}"}]}], 
             "\n", "\t\t\t", "]"}], "//", "Transpose"}]}], "\n", "\t\t", 
          "]"}]}], ";", "\n", "\t\t", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{
         "Min", " ", "and", " ", "Max", " ", "charges", " ", "and", " ", 
          "atom", " ", "specific", " ", "descriptors"}], "*)"}], "\n", "\t\t", 
        RowBox[{"chargeHeaders", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<file_name\>\"", ",", "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"classes", "[", 
                RowBox[{"[", "t", "]"}], "]"}], "<>", "\"\<c_min_\>\"", "<>", 
               RowBox[{
                RowBox[{"atomDescriptorMatrix", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "n", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", 
                RowBox[{"Count", "[", 
                 RowBox[{
                  RowBox[{"atomDescriptorMatrix", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "_"}], "]"}], ",", 
                "1"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"classes", "[", 
                RowBox[{"[", "t", "]"}], "]"}], "<>", "\"\<c_min+1_\>\"", "<>", 
               RowBox[{
                RowBox[{"atomDescriptorMatrix", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "n", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", 
                RowBox[{"Count", "[", 
                 RowBox[{
                  RowBox[{"atomDescriptorMatrix", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "_"}], "]"}], ",", 
                "1"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"classes", "[", 
                RowBox[{"[", "t", "]"}], "]"}], "<>", "\"\<c_max_\>\"", "<>", 
               RowBox[{
                RowBox[{"atomDescriptorMatrix", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "n", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", 
                RowBox[{"Count", "[", 
                 RowBox[{
                  RowBox[{"atomDescriptorMatrix", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "_"}], "]"}], ",", 
                "1"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"classes", "[", 
                RowBox[{"[", "t", "]"}], "]"}], "<>", "\"\<c_max-1_\>\"", "<>", 
               RowBox[{
                RowBox[{"atomDescriptorMatrix", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "n", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", 
                RowBox[{"Count", "[", 
                 RowBox[{
                  RowBox[{"atomDescriptorMatrix", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "_"}], "]"}], ",", 
                "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "\t\t", "}"}],
           "]"}]}], ";", "\n", "\t\t", "\n", "\t\t", 
        RowBox[{"header", "=", 
         RowBox[{"atomDescriptorMatrix", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t\t", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Quiet", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{"chargeList", "=", 
           RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{
             RowBox[{"(", "\[IndentingNewLine]", "\t\t\t\t", 
              RowBox[{
               RowBox[{"ExtractDescriptors", "[", 
                RowBox[{"pathlistHot", "[", 
                 RowBox[{"[", "m", "]"}], "]"}], "]"}], ";", 
               "\[IndentingNewLine]", "\n", "\n", "\t\t\t\t", 
               RowBox[{"If", "[", "\[IndentingNewLine]", "\t\t\t\t\t", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Count", "[", 
                   RowBox[{
                    RowBox[{"atomDescriptorMatrix", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "_"}], "]"}], 
                  "\[Equal]", 
                  RowBox[{"Count", "[", 
                   RowBox[{"header", ",", "_"}], "]"}]}], "*)"}], 
                RowBox[{"True", ",", "\[IndentingNewLine]", "\t\t\t\t\t", 
                 RowBox[{"(", "\[IndentingNewLine]", "\t\t\t\t\t", 
                  RowBox[{"(*", 
                   RowBox[{
                   "get", " ", "common", " ", "columns", " ", 
                    "atomDescriptorMatrix"}], "*)"}], "\[IndentingNewLine]", 
                  "\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"atomDescriptorMatrix", "=", 
                    RowBox[{"GetColumns", "[", 
                    RowBox[{"atomDescriptorMatrix", ",", "header"}], "]"}]}], 
                   ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   "\t\t\t\t\t\t", 
                   RowBox[{"chargeVectors", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "1", ",", "2", ",", "\[IndentingNewLine]", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{
                    "Table", "[", "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"And", "[", 
                    RowBox[{
                    RowBox[{"StringContainsQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"atomDescriptorMatrix", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "n", "]"}], "]"}], ",", "\"\<charge\>\""}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"StringContainsQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"atomDescriptorMatrix", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "n", "]"}], "]"}], ",", "\"\<ES\>\""}], 
                    "]"}], "\[Equal]", "False"}]}], "]"}], ",", "n", ",", 
                    RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", "1", ",", 
                    RowBox[{"Count", "[", 
                    RowBox[{
                    RowBox[{"atomDescriptorMatrix", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "_"}], "]"}], ",", 
                    "1"}], "}"}]}], "\[IndentingNewLine]", "\t\t\t\t\t\t\t", 
                    "]"}]}], "\[IndentingNewLine]", "\t\t\t\t\t\t", "}"}], 
                    "]"}]}], ";", "\n", "\t\t\t\t\t\t", "\[IndentingNewLine]",
                    "\t\t\t\t\t\t", 
                   RowBox[{"minmax", "=", 
                    RowBox[{
                    RowBox[{"Sort", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Rest", "[", "atomDescriptorMatrix", "]"}], "]"}],
                     "[", 
                    RowBox[{"[", "chargeVectors", "]"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mean", "[", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"#1", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ";;", "5"}], "]"}], "]"}], "]"}], "]"}], ">", 
                    RowBox[{"Mean", "[", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ";;", "5"}], "]"}], "]"}], "]"}], "]"}]}], 
                    "&"}]}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "2"}], ",", "1", ",", "2"}], "}"}], "]"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", "\t\t\t\t\t\t", 
                   RowBox[{"minmax", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"pathlistHot", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Longest", "[", 
                    RowBox[{"__", "~~", "\"\<\\\\\>\""}], "]"}], "\[Rule]", 
                    "\"\<\>\""}], ",", 
                    RowBox[{"\"\<123.log\>\"", "\[Rule]", "\"\<\>\""}]}], 
                    "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"atomDescriptorMatrix", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"minmax", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"minmax", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"minmax", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"minmax", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "+", 
                    "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
                    "\t\t\t\t\t\t\t", "}"}], "]"}]}]}], "\n", "\t\t\t\t\t", 
                  ")"}], ",", "\n", "\t\t\t\t\t", 
                 RowBox[{"Prepend", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{"\"\<failed\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", "1", ",", 
                    RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{"chargeHeaders", ",", "_"}], "]"}], "-", "1"}], 
                    ",", "1"}], "}"}]}], "]"}], ",", 
                   RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"pathlistHot", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Longest", "[", 
                    RowBox[{"__", "~~", "\"\<\\\\\>\""}], "]"}], "\[Rule]", 
                    "\"\<\>\""}], ",", 
                    RowBox[{"\"\<123.log\>\"", "\[Rule]", "\"\<\>\""}]}], 
                    "}"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
                "\t\t\t\t\t", "\n", "\t\t\t\t", "]"}]}], 
              "\[IndentingNewLine]", "\t\t\t", ")"}], ",", 
             "\[IndentingNewLine]", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"m", ",", "1", ",", 
               RowBox[{"Count", "[", 
                RowBox[{"pathlistHot", ",", "_"}], "]"}], ",", "1"}], "}"}]}],
             "\[IndentingNewLine]", "\t\t", "]"}]}], ";"}], 
         "\[IndentingNewLine]", "\t\t", "]"}], ";", "\[IndentingNewLine]", 
        "\t\t", 
        RowBox[{"atomicHot", "=", 
         RowBox[{"Prepend", "[", 
          RowBox[{"chargeList", ",", "chargeHeaders"}], "]"}]}], ";", "\n", 
        "\t\t", "\n", "\t\t", 
        RowBox[{"allInput", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"StringReplace", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Longest", "[", 
                 RowBox[{"__", "~~", "\"\<\\\\\>\""}], "]"}], "\[Rule]", 
                "\"\<\>\""}], ",", 
               RowBox[{"\"\<123.log\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], 
            "]"}], "&"}], "/@", "pathlist"}]}], ";", "\n", "\t\t", 
        RowBox[{"atomicHot", "=", 
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{"If", "[", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"atomicHot", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"allInput", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", "\n", 
              "\t\t\t\t", 
              RowBox[{"atomicHot", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"atomicHot", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"allInput", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "//", 
                   "Flatten"}], ")"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", "\n", 
              "\t\t\t\t", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{"\"\<failed\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"m", ",", "1", ",", 
                   RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{
                    RowBox[{"atomicHot", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "_"}], "]"}], "-", 
                    "1"}], ",", "1"}], "}"}]}], "]"}], "//", 
               RowBox[{"Prepend", "[", 
                RowBox[{"allInput", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "]"}]}]}], "\n", "\t\t\t", 
             "]"}], ",", "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{"Count", "[", 
               RowBox[{"allInput", ",", "_"}], "]"}], ",", "1"}], "}"}]}], 
           "\n", "\t\t", "]"}], "//", 
          RowBox[{"Prepend", "[", 
           RowBox[{"atomicHot", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";", "\n", "\t\t", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
            "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
           "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
            "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
           "**", "**", "**", "**", "**", "**", "**", "**", "**"}], "*", " ", 
          "Shared", " ", "vibrations"}], "*)"}], "\n", "\n", "\t\t", 
        "CompareVibrationsPresets", ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"corrThreshold", "=", "0.7"}], ";", "\n", "\t\t", 
        RowBox[{"freqThreshold", "=", 
         RowBox[{"{", 
          RowBox[{"500", ",", "300"}], "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"CompareVibrations", "[", 
         RowBox[{
          RowBox[{"pathlist", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"pathlist", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"pathlistVib", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"pathlist", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"dft", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
               "\"\<failed\>\""}], "]"}], ")"}], "-", "1"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"vib", "=", 
         RowBox[{"SharedVibrations", "[", 
          RowBox[{"pathlistVib", ",", 
           RowBox[{"pathlistVib", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\n", "\t\t", 
        "\n", "\t\t", 
        RowBox[{"allInput", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"StringReplace", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Longest", "[", 
                 RowBox[{"__", "~~", "\"\<\\\\\>\""}], "]"}], "\[Rule]", 
                "\"\<\>\""}], ",", 
               RowBox[{"\"\<123.log\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], 
            "]"}], "&"}], "/@", "pathlist"}]}], ";", "\n", "\t\t", 
        RowBox[{"vib", "=", 
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{"If", "[", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"vib", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"allInput", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", "\n", 
              "\t\t\t\t", 
              RowBox[{"vib", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"vib", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"allInput", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "//", 
                   "Flatten"}], ")"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", "\n", 
              "\t\t\t\t", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{"\"\<failed\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"m", ",", "1", ",", 
                   RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{
                    RowBox[{"vib", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "_"}], "]"}], "-", 
                    "1"}], ",", "1"}], "}"}]}], "]"}], "//", 
               RowBox[{"Prepend", "[", 
                RowBox[{"allInput", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "]"}]}]}], "\n", "\t\t\t", 
             "]"}], ",", "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{"Count", "[", 
               RowBox[{"allInput", ",", "_"}], "]"}], ",", "1"}], "}"}]}], 
           "\n", "\t\t", "]"}], "//", 
          RowBox[{"Prepend", "[", 
           RowBox[{"vib", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
            "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
           "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
            "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
           "**", "**", "**", "**", "**", "**", "**", "**", "**"}], "*", " ", 
          "%", "VBur", " ", "for", " ", "labeled", " ", "atoms"}], "*)"}], 
        "\[IndentingNewLine]", "\n", "\t\t", 
        RowBox[{"pathlistVol", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"pathlist", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"dft", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
               "\"\<failed\>\""}], "]"}], ")"}], "-", "1"}]}], "]"}]}], ";", 
        "\n", "\t\t", 
        RowBox[{"ExtractDescriptors", "[", 
         RowBox[{"pathlistVol", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ";", "\n", "\t\t", "\n", 
        "\t\t", 
        RowBox[{"rootName", "=", 
         RowBox[{"classes", "[", 
          RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"volumeHeaders", "=", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"rootName", "<>", "\"\<atom\>\"", "<>", 
             RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<_%VBur\>\""}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"atomDescriptorMatrixLabeled", "//", 
                 RowBox[{"Count", "[", "_", "]"}]}], ")"}], "-", "1"}]}], 
             "}"}]}], "]"}], "//", 
          RowBox[{"Prepend", "[", "\"\<file_name\>\"", "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"volumeList", "=", 
         RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{
           RowBox[{"(", "\[IndentingNewLine]", "\t\t\t\t", 
            RowBox[{
             RowBox[{"ExtractDescriptors", "[", 
              RowBox[{"pathlistVol", "[", 
               RowBox[{"[", "m", "]"}], "]"}], "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t\t\t", 
             RowBox[{"selectMatrixPosition", "=", "False"}], ";", 
             "\[IndentingNewLine]", "\t\t\t\t", 
             RowBox[{"meshCount", "=", "10"}], ";", "\[IndentingNewLine]", 
             "\t\t\t\t", 
             RowBox[{"Prepend", "[", "\[IndentingNewLine]", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"OccupiedVolume", "[", 
                  RowBox[{
                   RowBox[{"pathlistVol", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], ",", "n"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"atomDescriptorMatrixLabeled", "//", 
                    RowBox[{"Count", "[", "_", "]"}]}], ")"}], "-", "1"}]}], 
                  "}"}]}], "]"}], ",", "\[IndentingNewLine]", "\t\t\t\t\t", 
               RowBox[{"StringReplace", "[", 
                RowBox[{
                 RowBox[{"pathlistVol", "[", 
                  RowBox[{"[", "m", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Longest", "[", 
                    RowBox[{"__", "~~", "\"\<\\\\\>\""}], "]"}], "\[Rule]", 
                    "\"\<\>\""}], ",", 
                   RowBox[{"\"\<123.log\>\"", "\[Rule]", "\"\<\>\""}]}], 
                  "}"}]}], "]"}]}], "\[IndentingNewLine]", "\t\t\t\t", 
              "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t\t",
             ")"}], ",", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"{", 
            RowBox[{"m", ",", "1", ",", 
             RowBox[{"Count", "[", 
              RowBox[{"pathlistVol", ",", "_"}], "]"}], ",", "1"}], "}"}]}], 
          "\[IndentingNewLine]", "\t\t", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"volume", "=", 
         RowBox[{"Prepend", "[", 
          RowBox[{"volumeList", ",", "volumeHeaders"}], "]"}]}], ";", "\n", 
        "\t\t", "\n", "\t\t", 
        RowBox[{"allInput", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"StringReplace", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Longest", "[", 
                 RowBox[{"__", "~~", "\"\<\\\\\>\""}], "]"}], "\[Rule]", 
                "\"\<\>\""}], ",", 
               RowBox[{"\"\<123.log\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], 
            "]"}], "&"}], "/@", "pathlist"}]}], ";", "\n", "\t\t", 
        RowBox[{"volume", "=", 
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{"If", "[", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"volume", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"allInput", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", "\n", 
              "\t\t\t\t", 
              RowBox[{"volume", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"volume", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"allInput", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "//", 
                   "Flatten"}], ")"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", "\n", 
              "\t\t\t\t", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{"\"\<failed\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"m", ",", "1", ",", 
                   RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{
                    RowBox[{"volume", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "_"}], "]"}], "-", 
                    "1"}], ",", "1"}], "}"}]}], "]"}], "//", 
               RowBox[{"Prepend", "[", 
                RowBox[{"allInput", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "]"}]}]}], "\n", "\t\t\t", 
             "]"}], ",", "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{"Count", "[", 
               RowBox[{"allInput", ",", "_"}], "]"}], ",", "1"}], "}"}]}], 
           "\n", "\t\t", "]"}], "//", 
          RowBox[{"Prepend", "[", 
           RowBox[{"volume", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";", "\n", "\t\t", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
            "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
           "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
            "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
           "**", "**", "**", "**", "**", "**", "**", "**", "**"}], "*", " ", 
          "%", "VBur", " ", "for", " ", "min", " ", "and", " ", "max", " ", 
          "charge", " ", "atoms"}], "*)"}], "\n", "\n", "\t\t", 
        RowBox[{"pathlistVol", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"pathlist", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"dft", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
               "\"\<failed\>\""}], "]"}], ")"}], "-", "1"}]}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "If", " ", "you", " ", "want", " ", "to", " ", "remove", " ", 
          "failed", " ", "jobs"}], "*)"}], "\n", "\t\t", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"pathlistVol", "=", "pathlist"}], ";"}], "*)"}], "\n", 
        "\t\t", "\n", "\t\t", 
        RowBox[{"rootName", "=", 
         RowBox[{"classes", "[", 
          RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"volumeHeaders", "=", 
         RowBox[{"{", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{"\"\<file_name\>\"", ",", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"rootName", "<>", "\"\<c_min_%VBur\>\""}], ",", 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"rootName", "<>", "\"\<c_min+1_%VBur\>\""}], ",", 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"rootName", "<>", "\"\<c_max_%VBur\>\""}], ",", 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"rootName", "<>", "\"\<c_max-1_%VBur\>\""}]}], 
          "\[IndentingNewLine]", "\t\t", "}"}]}], ";", "\[IndentingNewLine]", 
        "\t\t", "\n", "\t\t", 
        RowBox[{"Quiet", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{"volumeList", "=", 
           RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{
             RowBox[{"(", "\[IndentingNewLine]", "\t\t\t\t", 
              RowBox[{
               RowBox[{"ExtractDescriptors", "[", 
                RowBox[{"pathlistVol", "[", 
                 RowBox[{"[", "m", "]"}], "]"}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t\t\t", 
               RowBox[{"chargeVectors", "=", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "1", ",", "2", ",", "\[IndentingNewLine]", "\t\t\t\t\t", 
                   RowBox[{
                   "Table", "[", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"And", "[", 
                    RowBox[{
                    RowBox[{"StringContainsQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"atomDescriptorMatrix", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "n", "]"}], "]"}], ",", "\"\<charge\>\""}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"StringContainsQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"atomDescriptorMatrix", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "n", "]"}], "]"}], ",", "\"\<ES\>\""}], 
                    "]"}], "\[Equal]", "False"}]}], "]"}], ",", "n", ",", 
                    RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", "1", ",", 
                    RowBox[{"Count", "[", 
                    RowBox[{
                    RowBox[{"atomDescriptorMatrix", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "_"}], "]"}], ",", 
                    "1"}], "}"}]}], "\[IndentingNewLine]", "\t\t\t\t\t", 
                    "]"}]}], "\[IndentingNewLine]", "\t\t\t\t", "}"}], 
                 "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "\t\t\t\t", 
               RowBox[{"minmax", "=", 
                RowBox[{
                 RowBox[{"Sort", "[", "\[IndentingNewLine]", "\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Rest", "[", "atomDescriptorMatrix", "]"}], "]"}],
                     "[", 
                    RowBox[{"[", "chargeVectors", "]"}], "]"}], "]"}], ",", 
                   "\[IndentingNewLine]", "\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Mean", "[", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"#1", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ";;", "5"}], "]"}], "]"}], "]"}], "]"}], ">", 
                    RowBox[{"Mean", "[", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ";;", "5"}], "]"}], "]"}], "]"}], "]"}]}], 
                    "&"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "2"}], ",", "1", ",", "2"}], "}"}], "]"}], 
                 "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", "\t\t\t\t", 
               RowBox[{"selectMatrixPosition", "=", "True"}], ";", 
               "\[IndentingNewLine]", "\t\t\t\t", 
               RowBox[{"meshCount", "=", "10"}], ";", "\[IndentingNewLine]", 
               "\t\t\t\t", 
               RowBox[{"Prepend", "[", "\[IndentingNewLine]", "\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"OccupiedVolume", "[", 
                    RowBox[{
                    RowBox[{"pathlistVol", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"minmax", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "//", "ToExpression"}]}], 
                    "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"n", ",", 
                    RowBox[{"Count", "[", 
                    RowBox[{"minmax", ",", "_"}], "]"}]}], "}"}]}], "]"}], 
                 ",", "\[IndentingNewLine]", "\t\t\t\t\t", 
                 RowBox[{"StringReplace", "[", 
                  RowBox[{
                   RowBox[{"pathlistVol", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Longest", "[", 
                    RowBox[{"__", "~~", "\"\<\\\\\>\""}], "]"}], "\[Rule]", 
                    "\"\<\>\""}], ",", 
                    RowBox[{"\"\<123.log\>\"", "\[Rule]", "\"\<\>\""}]}], 
                    "}"}]}], "]"}]}], "\[IndentingNewLine]", "\t\t\t\t", 
                "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
              "\t\t\t", ")"}], ",", "\[IndentingNewLine]", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"m", ",", "1", ",", 
               RowBox[{"Count", "[", 
                RowBox[{"pathlistVol", ",", "_"}], "]"}], ",", "1"}], "}"}]}],
             "\[IndentingNewLine]", "\t\t", "]"}]}], ";"}], 
         "\[IndentingNewLine]", "\t\t", "]"}], ";", "\[IndentingNewLine]", 
        "\t\t", "\n", "\t\t", 
        RowBox[{"volumeHot", "=", 
         RowBox[{"Prepend", "[", 
          RowBox[{"volumeList", ",", "volumeHeaders"}], "]"}]}], ";", "\n", 
        "\t\t", "\n", "\t\t", 
        RowBox[{"allInput", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"StringReplace", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Longest", "[", 
                 RowBox[{"__", "~~", "\"\<\\\\\>\""}], "]"}], "\[Rule]", 
                "\"\<\>\""}], ",", 
               RowBox[{"\"\<123.log\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], 
            "]"}], "&"}], "/@", "pathlist"}]}], ";", "\n", "\t\t", 
        RowBox[{"volumeHot", "=", 
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{"If", "[", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"volumeHot", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"allInput", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", "\n", 
              "\t\t\t\t", 
              RowBox[{"volumeHot", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"volumeHot", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"allInput", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "//", 
                   "Flatten"}], ")"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", "\n", 
              "\t\t\t\t", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{"\"\<failed\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"m", ",", "1", ",", 
                   RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{
                    RowBox[{"volumeHot", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "_"}], "]"}], "-", 
                    "1"}], ",", "1"}], "}"}]}], "]"}], "//", 
               RowBox[{"Prepend", "[", 
                RowBox[{"allInput", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "]"}]}]}], "\n", "\t\t\t", 
             "]"}], ",", "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{"Count", "[", 
               RowBox[{"allInput", ",", "_"}], "]"}], ",", "1"}], "}"}]}], 
           "\n", "\t\t", "]"}], "//", 
          RowBox[{"Prepend", "[", 
           RowBox[{"volumeHot", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";"}], "\n", "\n", 
       "\t", ")"}]}], "\n", "]"}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.7638412425610704`*^9, 3.7638412580499563`*^9}, {
   3.763841397244918*^9, 3.7638413981549697`*^9}, {3.7638414285967107`*^9, 
   3.7638416532195587`*^9}, {3.7638416836532993`*^9, 
   3.7638417075616665`*^9}, {3.763841754087328*^9, 3.7638419193337793`*^9}, {
   3.7638419694676466`*^9, 3.763841980505278*^9}, 3.7638420162703238`*^9, {
   3.763842048353159*^9, 3.763842061557914*^9}, {3.763842343825059*^9, 
   3.763842395705026*^9}, {3.763845861931283*^9, 3.7638458671715827`*^9}, {
   3.76468419924574*^9, 3.764684235836806*^9}, {3.7646842689608593`*^9, 
   3.764684284087884*^9}, {3.764684325536956*^9, 3.7646845657113605`*^9}, {
   3.7646846035114193`*^9, 3.7646846346584697`*^9}, {3.7646847046638308`*^9, 
   3.764684957023265*^9}, {3.7646849913192263`*^9, 3.7646850205518985`*^9}, {
   3.7646850682676277`*^9, 3.764685165112167*^9}, {3.7646852066005397`*^9, 
   3.764685214576996*^9}, 3.764685256184376*^9, {3.764690649384128*^9, 
   3.764690690479204*^9}, {3.7646907240162644`*^9, 3.764690804194417*^9}, {
   3.764690842009492*^9, 3.7646909374086742`*^9}, 3.7646911553500705`*^9, {
   3.7646911867941256`*^9, 3.764691192568135*^9}, {3.764691356609448*^9, 
   3.764691379393491*^9}, {3.764691461194646*^9, 3.764691505696724*^9}, {
   3.764691544760795*^9, 3.7646916719240274`*^9}, {3.764691803770274*^9, 
   3.7646918332703295`*^9}, 3.76469195104756*^9, {3.7646920236276913`*^9, 
   3.764692051514742*^9}, {3.7646920977758274`*^9, 3.764692127075879*^9}, {
   3.7646922684981375`*^9, 3.7646923059522123`*^9}, 3.7646951411564083`*^9, {
   3.7646957909646177`*^9, 3.7646958335386925`*^9}, {3.7646959051668277`*^9, 
   3.7646959115238423`*^9}, 3.764695955860936*^9, {3.764696456235855*^9, 
   3.764696535392996*^9}, {3.7646966126341653`*^9, 3.7646966153011723`*^9}, {
   3.764696654775243*^9, 3.764696655125243*^9}, {3.764697144282133*^9, 
   3.7646972107962546`*^9}, {3.764697552831882*^9, 3.7646976804861135`*^9}, 
   3.764697784793304*^9, {3.7646978188233643`*^9, 3.7646978369173965`*^9}, {
   3.7646980081237*^9, 3.764698110793892*^9}, 3.7646982423631744`*^9, 
   3.7646983344433436`*^9, {3.7646985405757265`*^9, 3.764698564887773*^9}, {
   3.764698622716875*^9, 3.76469870500003*^9}, 3.7646987575511756`*^9, {
   3.7646988018132577`*^9, 3.7646988059542675`*^9}, {3.7647019041475563`*^9, 
   3.7647019199174585`*^9}, {3.764702321476426*^9, 3.76470232905486*^9}, {
   3.7647023648329067`*^9, 3.7647023802237864`*^9}, {3.764702705745405*^9, 
   3.7647027269256167`*^9}, {3.7647034834818897`*^9, 
   3.7647034897812495`*^9}, {3.765550501206998*^9, 3.7655505021340504`*^9}, {
   3.765551090175685*^9, 3.7655510906957145`*^9}, {3.7656672226851635`*^9, 
   3.765667310517187*^9}, {3.765667484215122*^9, 3.7656675018031282`*^9}, 
   3.76566760691214*^9, {3.7656677049317465`*^9, 3.7656677962659707`*^9}, {
   3.7656678344441547`*^9, 3.765667862402754*^9}, {3.765667961786438*^9, 
   3.765668072122749*^9}, {3.765668116459285*^9, 3.7656681242197285`*^9}, {
   3.7656706196194572`*^9, 3.7656706401356306`*^9}, {3.7656706869853106`*^9, 
   3.7656706990109982`*^9}, {3.7665291776853905`*^9, 3.766529178353429*^9}, {
   3.7665292377278247`*^9, 3.7665292381018457`*^9}, {3.766529684928403*^9, 
   3.7665297109748926`*^9}, {3.771920531479224*^9, 3.77192055500857*^9}, {
   3.771921136565833*^9, 3.771921137956913*^9}, {3.7719211953301945`*^9, 
   3.771921196948287*^9}, {3.7719213556333632`*^9, 3.771921363457811*^9}, {
   3.771921421332121*^9, 3.7719214221101656`*^9}, {3.7719215838134146`*^9, 
   3.7719216071027465`*^9}, {3.7719217342790203`*^9, 
   3.7719217641297283`*^9}, {3.771922363375003*^9, 3.7719223782988567`*^9}, {
   3.771922420899293*^9, 3.7719224295277863`*^9}, {3.771923138284325*^9, 
   3.7719231937314963`*^9}, {3.771923258450198*^9, 3.7719232628074474`*^9}, {
   3.7719233991142435`*^9, 3.771923399618273*^9}, {3.7720135650275917`*^9, 
   3.7720135651736*^9}, {3.7720136419079895`*^9, 3.7720136712596684`*^9}, {
   3.77460585117033*^9, 3.774605909380659*^9}, {3.7827318332030153`*^9, 
   3.782731878425064*^9}},
 Background->RGBColor[
  0.18823529411764706`, 0.37254901960784315`, 
   0.37254901960784315`],ExpressionUUID->"f7135526-02ca-47ac-8c85-\
dc4de51186c1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"ReverseColor.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 165, 3, 128, "Title", "ExpressionUUID" -> \
"c07b878b-c9a4-4aaa-b9c4-ca5feef56d55"],
Cell[CellGroupData[{
Cell[770, 29, 279, 4, 92, "Chapter", "ExpressionUUID" -> \
"1092ece5-fea6-4c48-b3a5-ae0a0ac893d5"],
Cell[CellGroupData[{
Cell[1074, 37, 156, 3, 87, "Section", "ExpressionUUID" -> \
"12a4d768-90ce-4404-8658-06a6587f0416"],
Cell[1233, 42, 1792, 41, 336, "Text", "ExpressionUUID" -> \
"0335a3b2-a680-4d52-a1e0-5e1429677816"],
Cell[CellGroupData[{
Cell[3050, 87, 1968, 34, 63, "Input", "ExpressionUUID" -> \
"c71b780e-c5cf-4e27-934b-20f9df6b39d1"],
Cell[5021, 123, 2085, 39, 666, "Output", "ExpressionUUID" -> \
"66c43d69-1ce7-4590-800f-b0ce98a4b6df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7143, 167, 1751, 33, 87, "Input", "ExpressionUUID" -> \
"89838916-63e8-4949-8197-36659986f2d5"],
Cell[8897, 202, 1519, 22, 615, "Output", "ExpressionUUID" -> \
"1dbeffa2-982a-41ec-8a53-8a8c55fbbe35"]
}, Open  ]],
Cell[10431, 227, 1370, 35, 312, "Text", "ExpressionUUID" -> \
"90073951-cd8b-4c07-b2f9-24468a03126b"],
Cell[11804, 264, 1256, 22, 63, "Input", "ExpressionUUID" -> \
"fdf684e5-5824-4460-83a9-7158959fcccd"],
Cell[13063, 288, 671, 13, 63, "Input", "ExpressionUUID" -> \
"8589e928-48b5-4f56-8a2c-b0168821e7db"],
Cell[13737, 303, 827, 16, 63, "Input", "ExpressionUUID" -> \
"78ebb358-b799-4c38-8732-ad2bf8819b38"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14601, 324, 170, 3, 87, "Section", "ExpressionUUID" -> \
"f26a95e2-a887-429e-96a0-f89aab708bf2"],
Cell[14774, 329, 2275, 50, 534, "Text", "ExpressionUUID" -> \
"c9115722-75a6-4ae8-816e-61df314538bc"],
Cell[CellGroupData[{
Cell[17074, 383, 861, 19, 159, "Input", "ExpressionUUID" -> \
"1cf1259c-28b1-4497-8df1-156620190950"],
Cell[17938, 404, 3572, 51, 2439, "Output", "ExpressionUUID" -> \
"2dc23235-bb9d-4800-bd93-0a4460f7c5df"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21559, 461, 193, 3, 87, "Section", "ExpressionUUID" -> \
"069b9503-3bec-46e1-9568-82592ec7eca8"],
Cell[21755, 466, 2374, 52, 559, "Text", "ExpressionUUID" -> \
"39aba72a-95d7-44a6-a64e-c08010612f3c"],
Cell[CellGroupData[{
Cell[24154, 522, 917, 20, 159, "Input", "ExpressionUUID" -> \
"b622f71c-866a-484d-a2b6-7d96fe50bafa"],
Cell[25074, 544, 3075, 42, 1455, "Output", "ExpressionUUID" -> \
"ba87a62b-9a39-4375-a090-4b80a989bf37"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28198, 592, 217, 4, 87, "Section", "ExpressionUUID" -> \
"3394cc42-6129-4aeb-a64a-b0f9c06f5dd8"],
Cell[28418, 598, 2081, 46, 534, "Text", "ExpressionUUID" -> \
"2bce2c9b-2d44-4d20-8e54-8ab757b0085e"],
Cell[30502, 646, 1077, 27, 87, "Input", "ExpressionUUID" -> \
"967868d2-fc43-468f-9e08-ea8ef2fb8e2d"],
Cell[31582, 675, 1132, 24, 159, "Input", "ExpressionUUID" -> \
"7b3cfb4c-0006-43f1-a5f6-b722181a1f29"],
Cell[32717, 701, 1751, 35, 207, "Input", "ExpressionUUID" -> \
"429cfdaf-9c08-45d5-88fe-192ceae03170"],
Cell[34471, 738, 1793, 36, 207, "Input", "ExpressionUUID" -> \
"a4ee38c9-49de-4282-a072-aaeb245c2659"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36313, 780, 517, 8, 92, "Chapter", "ExpressionUUID" -> \
"2dac40c7-9358-4010-86e7-e8ed8b3dfa74"],
Cell[CellGroupData[{
Cell[36855, 792, 468, 7, 59, "Subsection", "ExpressionUUID" -> \
"8880fe8f-9e30-4091-82ce-6e3203ab94ba"],
Cell[37326, 801, 873, 19, 135, "Input", "ExpressionUUID" -> \
"9ab925a4-0c85-4b56-9cf2-c7ccb6e3bfe1"],
Cell[38202, 822, 1871, 46, 375, "Input", "ExpressionUUID" -> \
"b46bc6a7-56d2-4f20-9a81-04fb6fb9d0bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40110, 873, 474, 7, 59, "Subsection", "ExpressionUUID" -> \
"9d186f48-1f45-46a6-99fc-9c9efcbcfef8"],
Cell[40587, 882, 7557, 173, 1146, "Code", "ExpressionUUID" -> \
"d777f96f-8bb9-4143-9a8b-211cdcd36036"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48181, 1060, 463, 7, 59, "Subsection", "ExpressionUUID" -> \
"77b03170-2e40-41d1-b1a1-5bf90b99925c"],
Cell[48647, 1069, 4877, 100, 433, "Code", "ExpressionUUID" -> \
"bf373414-d809-4d07-9422-a08d0806332b"],
Cell[53527, 1171, 2937, 62, 387, "Code", "ExpressionUUID" -> \
"9115b3f4-4125-4f3c-82af-34caa14274f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56501, 1238, 423, 6, 59, "Subsection", "ExpressionUUID" -> \
"11583a6d-0c8f-43bb-86d6-1907bc4316f9"],
Cell[56927, 1246, 5295, 121, 847, "Code", "ExpressionUUID" -> \
"6e4826ea-e448-4038-b6f3-31aa3e613210"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62259, 1372, 523, 8, 59, "Subsection", "ExpressionUUID" -> \
"478ec20e-6758-4e05-91aa-3db30ef5dd11"],
Cell[62785, 1382, 65254, 1394, 6620, "Code", "ExpressionUUID" -> \
"f7135526-02ca-47ac-8c85-dc4de51186c1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

